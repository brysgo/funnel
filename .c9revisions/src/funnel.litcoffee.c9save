{"ts":1364777414973,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"###\n# Copyright (c) 2013 Bryan Goldstein\n#\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n# of this software and associated documentation files (the \"Software\"), to deal\n# in the Software without restriction, including without limitation the rights\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n# copies of the Software, and to permit persons to whom the Software is\n# furnished to do so, subject to the following conditions:\n# The above copyright notice and this permission notice shall be included in\n# all copies or substantial portions of the Software.\n#\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n# SOFTWARE.\n# ----\n#\n# Funnel.js is the natural evolution of map-reduce. The goal of Funnel is to\n# provide an elegant way to build large, scalable, reactive apps without\n# the need for magically scaling databases or super ninja skills.\n###\n \n###\nFunnel.js Example\n###\n \nenglish_learner =\n  # in this case only one rule depends on our 'input' - a reserved rule\n  word: (input) ->\n    return input.split(' ')\n  # 'char' depends on 'word', and splits them up into individual charicters\n  char: (word) ->\n    return (c for c in word)\n  # 'vowel' depends on 'char' and returns a boolean\n  vowel: (char) ->\n    return char.toLowerCase() in ['a','e','i','o','u']\n  # 'word_has_vowel' depends on 'word' and 'vowel'\n  word_has_vowel: (word, vowel) ->\n    # notice that vowel is a list of bools now\n    # this is because by the time the least common ancestor of 'word'\n    # and 'vowel' ('word') run, there are multiple values for 'vowel'\n    return true in vowel \n###\nExperimental Serial Implementation of Funnel.js API\n###\n \nclass Funnel\n  \n  constructor: ( @rules ) ->\n    ###\n    Define shortcuts for running rules.\n    ###\n    @_compile()\n  \n  _compile: =>\n    @lca_of_rule = {}\n    for name, fn of @rules\n      @[name] = ( args... ) => @run_rule( name, args )\n      @lca_of_rule[name] = @lca( @arg_names( fn )... )\n  \n  arg_names: ( func ) ->\n    ###\n    Helper for getting argument names of a function.\n    ###\n    reg = /\\(([\\s\\S]*?)\\)/\n    params = reg.exec(func)\n    return params[1].split(/\\s*,\\s*/) if params\n  \n  listen: ( fn ) =>\n    ###\n    Adds an anonymous function to the hash, used for hooking up result to a view.\n    ###\n    key = \"_#{Object.keys(@rules).length}\"\n    @rules.key = fn\n    @_compile()\n  \n  lca: ( rules... ) =>\n    ###\n    Find the lowest common ancestor of a list of rules.\n    ###\n    if rules.length > 2\n      return @lca( @lca(rules[0...2]...), @lca(rules[2..]...) )\n    else if rules.length is 1\n      return rules[0]\n    else\n      [ one, two ] = rules\n      one_ancestors = [ ]\n      two_ancestors = [ ]\n      one_tmp = [ one ]\n      two_tmp = [ two ]\n      while true\n        one_ancestors = one_ancestors.concat( one_tmp )\n        two_ancestors = two_ancestors.concat( two_tmp )\n        for o in one_ancestors\n          return o if o in two_ancestors\n        one_tmp =  [].concat( (@arg_names(@rules[i]) for i in one_tmp)... )\n        two_tmp =  [].concat( (@arg_names(@rules[i]) for i in two_tmp)... )\n        break if undefined in one_tmp and undefined in two_tmp\n \n  run_rule: ( rule, args ) =>\n    ###\n    Run a rule through our experimental implementation.\n    ###\n    args = [ args ] unless Object::toString.call( args ) is '[object Array]'\n    result = @rules[ rule ]( args... )\n    # console.log( \"#{rule} was run with #{args} and returned #{result}.\" )\n    return @map( rule, result )\n \n  input: ( args... ) =>\n    ###\n    Run with the given input.\n    ###\n    return @map( 'input', args )\n    \n  _extend: ( objects... ) ->\n    result = {}\n    for o in objects\n      for k, v of o\n        result[k] ?= []\n        v = [ v ] unless Object::toString.call( v ) is '[object Array]'\n        result[k] = result[k].concat(v...)\n    return result\n  \n  reduce: ( rule, outputs ) =>\n    ###\n    Checks for newly fulfiled input combinations.\n    ###\n    for n, fn of @rules\n      a = @arg_names( fn )\n      args = []\n      args.push( ( outputs[i] for i in a )... )\n      if a.length > 1 and @lca_of_rule[ n ] is rule\n        o = @run_rule( n, args )\n        outputs = @_extend( outputs, o )\n    return outputs\n  \n  map: ( rule, result ) =>\n    ###\n    Runs all the single dependancy rules that follow from the input.\n    ###\n    if Object::toString.call( result ) is '[object Array]'\n      return @_extend( ( @map(rule, r) for r in result )... )\n    else\n      output = {}\n      # Find and run exclusive dependants\n      for n, fn of @rules\n        a = @arg_names( fn )\n        if a.length is 1 and @lca_of_rule[ n ] is rule\n          o = @run_rule( n, result )\n          o[ rule ] = result\n          o = @reduce( rule, o )\n          output = @_extend( output, o )\n      output[ rule ] ?= result\n      return output\n   \n###\nRun the example\n###\n \n# Create our funnel\nobj = new Funnel(english_learner)\n \n# Listen to the event we are interested in\nobj.listen( (input, word_has_vowel) ->\n  _not = ''\n  _not = \"not\" if false in word_has_vowel\n  console.log( \"The sentence '#{input}' is #{_not} english!\" )\n)\n \n# Send the input\nobj.input( 'Hello I am an input string.' )\nobj.input( 'Hrllw y rm rn rnprt strng.' )"]],"start1":0,"start2":0,"length1":0,"length2":5623}]],"length":5623}
{"contributors":[],"silentsave":false,"ts":1364778774896,"patch":[[{"diffs":[[0,"###\n"],[-1," \n###\nFunnel.js Example\n###\n \nenglish_learner =\n  # in this case only one rule depends on our 'input' - a reserved rule\n  word: (input) ->\n    return input.split(' ')\n  # 'char' depends on 'word', and splits them up into individual charicters\n  char: (word) ->\n    return (c for c in word)\n  # 'vowel' depends on 'char' and returns a boolean\n  vowel: (char) ->\n    return char.toLowerCase() in ['a','e','i','o','u']\n  # 'word_has_vowel' depends on 'word' and 'vowel'\n  word_has_vowel: (word, vowel) ->\n    # notice that vowel is a list of bools now\n    # this is because by the time the least common ancestor of 'word'\n    # and 'vowel' ('word') run, there are multiple values for 'vowel'\n    return true in vowel "],[0,"\n###"]],"start1":1321,"start2":1321,"length1":722,"length2":8},{"diffs":[[0,"tput"],[-1,"\n   \n###\nRun the example\n###\n \n# Create our funnel\nobj = new Funnel(english_learner)\n \n# Listen to the event we are interested in\nobj.listen( (input, word_has_vowel) ->\n  _not = ''\n  _not = \"not\" if false in word_has_vowel\n  console.log( \"The sentence '#{input}' is #{_not} english!\" )\n)\n \n# Send the input\nobj.input( 'Hello I am an input string.' )\nobj.input( 'Hrllw y rm rn rnprt strng.' )"]],"start1":4514,"start2":4514,"length1":395,"length2":4}]],"length":4518,"saved":false}
{"ts":1364778874138,"patch":[[{"diffs":[[0,"sult\n      return output"],[1,"\n\n@Funnel = Funnel"]],"start1":4494,"start2":4494,"length1":24,"length2":42}]],"length":4536,"saved":false}
{"ts":1364779116049,"patch":[[{"diffs":[[0,"utput\n\n@"],[-1,"Funnel"],[0," = Funne"]],"start1":4513,"start2":4513,"length1":22,"length2":16}]],"length":4530,"saved":false}
{"ts":1364779255267,"patch":[[{"diffs":[[0,"utput\n\n@"],[1,"Funnel"],[0," = Funne"]],"start1":4513,"start2":4513,"length1":16,"length2":22}]],"length":4536,"saved":false}
{"ts":1364779351521,"patch":[[{"diffs":[[0,"ut\n\n"],[-1,"@Funnel"],[1,"namespace \"Funnel\", (exports) ->\n  exports"],[0," = F"]],"start1":4516,"start2":4516,"length1":15,"length2":50}]],"length":4571,"saved":false}
{"ts":1364779420578,"patch":[[{"diffs":[[0,"orts) ->"],[-1,"\n "],[0," exports"]],"start1":4544,"start2":4544,"length1":18,"length2":16}]],"length":4569,"saved":false}
{"ts":1364779515759,"patch":[[{"diffs":[[0,"output\n\n"],[1,"#"],[0,"namespac"]],"start1":4512,"start2":4512,"length1":16,"length2":17}]],"length":4570,"saved":false}
{"ts":1364779540401,"patch":[[{"diffs":[[0,"ut\n\n"],[-1,"#namespace \"Funnel\", (exports) -> exports"],[1,"@Funnel"],[0," = F"]],"start1":4516,"start2":4516,"length1":49,"length2":15}]],"length":4536,"saved":false}
{"ts":1364779553014,"patch":[[{"diffs":[[0,"utput\n\n@"],[-1,"Funnel"],[0," = Funne"]],"start1":4513,"start2":4513,"length1":22,"length2":16}]],"length":4530,"saved":false}
{"ts":1364779710788,"patch":[[{"diffs":[[0,"output\n\n"],[-1,"@"],[1,"namespace \"Funnel\", (exports) -> exports"],[0," = Funne"]],"start1":4512,"start2":4512,"length1":17,"length2":56}]],"length":4569,"saved":false}
{"contributors":[],"silentsave":false,"ts":1364780092645,"patch":[[{"diffs":[[0,"output\n\n"],[1,"namespace = (target, name, block) ->\n  [target, name, block] = [(if typeof exports isnt 'undefined' then exports else window), arguments...] if arguments.length < 3\n  top    = target\n  target = target[item] or= {} for item in name.split '.'\n  block target, top\n"],[0,"namespac"]],"start1":4512,"start2":4512,"length1":16,"length2":277}]],"length":4830,"saved":false}
{"contributors":[],"silentsave":false,"ts":1364782362120,"patch":[[{"diffs":[[0,"ut\n\n"],[-1,"namespace = (target, name, block) ->\n  [target, name, block] = [(if typeof exports isnt 'undefined' then exports else window), arguments...] if arguments.length < 3\n  top    = target\n  target = target[item] or= {} for item in name.split '.'\n  block target, top\nnamespace \"Funnel\", (exports) -> exports"],[1,"@"],[0," = F"]],"start1":4516,"start2":4516,"length1":309,"length2":9}]],"length":4530,"saved":false}
{"ts":1364782395995,"patch":[[{"diffs":[[0,"output\n\n"],[-1,"@"],[1,"this"],[0," = Funne"]],"start1":4512,"start2":4512,"length1":17,"length2":20}]],"length":4533,"saved":false}
{"ts":1364782995093,"patch":[[{"diffs":[[0,"I\n###\n \n"],[1,"module.exports = "],[0,"class Fu"]],"start1":1380,"start2":1380,"length1":16,"length2":33},{"diffs":[[0,"tput"],[-1,"\n\n@Funnel = Funnel"]],"start1":4531,"start2":4531,"length1":22,"length2":4}]],"length":4535,"saved":false}
{"contributors":[],"silentsave":false,"ts":1364783567664,"patch":[[{"diffs":[[0,"###\n"],[-1,"# Copyright (c) 2013 Bryan Goldstein\n#\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n# of this software and associated documentation files (the \"Software\"), to deal\n# in the Software without restriction, including without limitation the rights\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n# copies of the Software, and to permit persons to whom the Software is\n# furnished to do so, subject to the following conditions:\n# The above copyright notice and this permission notice shall be included in\n# all copies or substantial portions of the Software.\n#\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n# SOFTWARE.\n# ----\n#\n"],[0,"# Fu"]],"start1":0,"start2":0,"length1":1109,"length2":8}]],"length":3434,"saved":false}
{"ts":1364783885801,"patch":[[{"diffs":[[0,"l.js"],[-1," is the natural evolution of map-reduce."],[1,"\n# ---------\n#"],[0," The"]],"start1":11,"start2":11,"length1":48,"length2":22},{"diffs":[[0,"el is to"],[-1,"\n#"],[0," provide"]],"start1":46,"start2":46,"length1":18,"length2":16},{"diffs":[[0,"calable,"],[1,"\n#"],[0," reactiv"]],"start1":95,"start2":95,"length1":16,"length2":18},{"diffs":[[0," without"],[-1,"\n#"],[0," the nee"]],"start1":119,"start2":119,"length1":18,"length2":16},{"diffs":[[0,"r super "],[1,"\n# "],[0,"ninja sk"]],"start1":170,"start2":170,"length1":16,"length2":19}]],"length":3409,"saved":false}
{"contributors":[],"silentsave":false,"ts":1364783959220,"patch":[[{"diffs":[[0,"##\n\n###\n"],[1,"# "],[0,"Experime"]],"start1":196,"start2":196,"length1":16,"length2":18}]],"length":3411,"saved":false}
{"contributors":[],"silentsave":true,"ts":1364787013695,"patch":[[{"diffs":[[-1,"###\n# "],[0,"Funnel.j"]],"start1":0,"start2":0,"length1":14,"length2":8},{"diffs":[[0,"nnel.js\n"],[-1,"# "],[0,"--------"]],"start1":2,"start2":2,"length1":18,"length2":16},{"diffs":[[0,"-------\n"],[-1,"# "],[0,"The goal"]],"start1":12,"start2":12,"length1":18,"length2":16},{"diffs":[[0,"alable,\n"],[-1,"# "],[0,"reactive"]],"start1":86,"start2":86,"length1":18,"length2":16},{"diffs":[[0," super \n"],[-1,"# "],[0,"ninja sk"]],"start1":159,"start2":159,"length1":18,"length2":16},{"diffs":[[0,"ls.\n"],[-1,"###\n\n###\n# E"],[1,"\nThis is an e"],[0,"xper"]],"start1":177,"start2":177,"length1":20,"length2":21},{"diffs":[[0,"tal "],[-1,"S"],[1,"s"],[0,"erial "],[-1,"I"],[1,"i"],[0,"mple"]],"start1":202,"start2":202,"length1":16,"length2":16},{"diffs":[[0," API"],[-1,"\n###\n \nmodule.exports = class Funnel\n  \n  constructor: ( @rules ) ->\n    ###\n    Define shortcuts for running rules.\n    ###\n"],[1,". Its main\npurpose is to iron out a solid Funnel API before a serious implementation\nbegins.\n\n## The Funnel class\n\nOur implementation is contained in our `Funnel` class, for now this is where we\ndefine all functions public and private that are required to make run Funnel's\nevent loop according to the spec.\n\n    class Funnel\n\n### Compilation\n\nFunnel has a very quick compilation step that must happen every time you change\nthe rules. This is because we have to build the dependancy tree, otherwise we\nwould have to do a lot more work at runtime figuring out when each rule should\nbe kicked off.\n\n      constructor: ( @rules ) ->\n    "],[0,"    "]],"start1":240,"start2":240,"length1":133,"length2":642},{"diffs":[[0,"ile()\n  "],[-1,"\n"],[1,"    \n    "],[0,"  _compi"]],"start1":888,"start2":888,"length1":17,"length2":25},{"diffs":[[0,"ile: =>\n    "],[1,"   "],[1," "],[0,"@lca_of_rule"]],"start1":912,"start2":912,"length1":24,"length2":28},{"diffs":[[0,"f_rule = {}\n"],[1,"    "],[0,"    for name"]],"start1":934,"start2":934,"length1":24,"length2":28},{"diffs":[[0,"s\n      "],[1,"    "],[0,"@[name] "]],"start1":975,"start2":975,"length1":16,"length2":20},{"diffs":[[0,"rgs )\n      "],[1," "],[1,"   "],[0,"@lca_of_rule"]],"start1":1030,"start2":1030,"length1":24,"length2":28},{"diffs":[[0,"... )\n  "],[-1,"\n"],[1,"    \n    "],[0,"  arg_na"]],"start1":1089,"start2":1089,"length1":17,"length2":25},{"diffs":[[0,"nc ) ->\n    "],[-1,"###\n"],[1,"    ###\n    "],[0,"    Helper f"]],"start1":1123,"start2":1123,"length1":28,"length2":36},{"diffs":[[0,"a function.\n"],[1,"    "],[0,"    ###\n"],[1,"    "],[0,"    reg = /\\"]],"start1":1188,"start2":1188,"length1":32,"length2":40},{"diffs":[[0,"\\)/\n    "],[1," "],[1,"   "],[0,"params ="]],"start1":1239,"start2":1239,"length1":16,"length2":20},{"diffs":[[0,"c(func)\n    "],[1," "],[1,"   "],[0,"return param"]],"start1":1267,"start2":1267,"length1":24,"length2":28},{"diffs":[[0,"s\n  "],[-1,"\n"],[0,"  "],[-1,"listen: ( fn ) =>\n    ###\n    Adds an anonymous function to the hash, used for hooking up result to a view.\n    ###\n    key = \"_#{Object.keys(@rules).length}\"\n    @rules.key = fn\n    @_compile()\n  \n"],[1,"  \n\n      \n    "],[0,"  lc"]],"start1":1325,"start2":1325,"length1":209,"length2":25},{"diffs":[[0,"( rules... ) =>\n"],[1,"    "],[0,"    ###\n    Find"]],"start1":1353,"start2":1353,"length1":32,"length2":36},{"diffs":[[0,"###\n    "],[1,"   "],[1," "],[0,"Find the"]],"start1":1377,"start2":1377,"length1":16,"length2":20},{"diffs":[[0," rules.\n    "],[-1,"###\n"],[1,"    ###\n    "],[0,"    if rules"]],"start1":1433,"start2":1433,"length1":28,"length2":36},{"diffs":[[0,"h > 2\n      "],[1," "],[1,"   "],[0,"return @lca("]],"start1":1475,"start2":1475,"length1":24,"length2":28},{"diffs":[[0,"]...) )\n"],[1,"    "],[0,"    else"]],"start1":1541,"start2":1541,"length1":16,"length2":20},{"diffs":[[0," is 1\n      "],[1,"  "],[1,"  "],[0,"return rules"]],"start1":1577,"start2":1577,"length1":24,"length2":28},{"diffs":[[0,"ules[0]\n"],[1,"    "],[0,"    else"]],"start1":1601,"start2":1601,"length1":16,"length2":20},{"diffs":[[0,"e\n      "],[1,"   "],[1," "],[0,"[ one, t"]],"start1":1620,"start2":1620,"length1":16,"length2":20},{"diffs":[[0,"o ] = rules\n"],[1,"    "],[0,"      one_an"]],"start1":1641,"start2":1641,"length1":24,"length2":28},{"diffs":[[0,"stors = [ ]\n"],[1,"    "],[0,"      two_an"]],"start1":1671,"start2":1671,"length1":24,"length2":28},{"diffs":[[0,"= [ ]\n      "],[1,"    "],[0,"one_tmp = [ "]],"start1":1707,"start2":1707,"length1":24,"length2":28},{"diffs":[[0,"one ]\n      "],[1," "],[1,"   "],[0,"two_tmp = [ "]],"start1":1735,"start2":1735,"length1":24,"length2":28},{"diffs":[[0,"]\n      "],[1,"  "],[1,"  "],[0,"while tr"]],"start1":1767,"start2":1767,"length1":16,"length2":20},{"diffs":[[0,"le true\n"],[1,"    "],[0,"        "]],"start1":1782,"start2":1782,"length1":16,"length2":20},{"diffs":[[0,"e_tmp )\n        "],[1,"   "],[1," "],[0,"two_ancestors = "]],"start1":1842,"start2":1842,"length1":32,"length2":36},{"diffs":[[0,"( two_tmp )\n"],[1,"    "],[0,"        for "]],"start1":1898,"start2":1898,"length1":24,"length2":28},{"diffs":[[0,"s\n          "],[1,"    "],[0,"return o if "]],"start1":1943,"start2":1943,"length1":24,"length2":28},{"diffs":[[0,"cestors\n        "],[1," "],[1,"   "],[0,"one_tmp =  [].co"]],"start1":1982,"start2":1982,"length1":32,"length2":36},{"diffs":[[0,"p)... )\n        "],[1,"  "],[1,"  "],[0,"two_tmp =  [].co"]],"start1":2062,"start2":2062,"length1":32,"length2":36},{"diffs":[[0,"        "],[1,"  "],[1,"  "],[0,"break if"]],"start1":2150,"start2":2150,"length1":16,"length2":20},{"diffs":[[0,"wo_tmp\n "],[-1,"\n"],[1,"    \n    "],[0,"  run_ru"]],"start1":2210,"start2":2210,"length1":17,"length2":25},{"diffs":[[0,", args ) =>\n    "],[-1,"###\n"],[1,"    ###\n    "],[0,"    Run a rule t"]],"start1":2245,"start2":2245,"length1":36,"length2":44},{"diffs":[[0,"tation.\n    "],[1," "],[1,"   "],[0,"###\n"],[1,"    "],[0,"    args = ["]],"start1":2321,"start2":2321,"length1":28,"length2":36},{"diffs":[[0,"Array]'\n    "],[1,"  "],[1,"  "],[0,"result = @ru"]],"start1":2414,"start2":2414,"length1":24,"length2":28},{"diffs":[[0,"( args... )\n"],[1,"    "],[0,"    # consol"]],"start1":2453,"start2":2453,"length1":24,"length2":28},{"diffs":[[0,"lt}.\" )\n    "],[1,"   "],[1," "],[0,"return @map("]],"start1":2537,"start2":2537,"length1":24,"length2":28},{"diffs":[[0,"sult )\n "],[-1,"\n"],[1,"    \n    "],[0,"  input:"]],"start1":2574,"start2":2574,"length1":17,"length2":25},{"diffs":[[0,".. ) =>\n    "],[1," "],[1,"   "],[0,"###\n"],[1,"    "],[0,"    Run with"]],"start1":2607,"start2":2607,"length1":28,"length2":36},{"diffs":[[0," input.\n    "],[1,"  "],[1,"  "],[0,"###\n"],[1,"    "],[0,"    return @"]],"start1":2653,"start2":2653,"length1":28,"length2":36},{"diffs":[[0,"s )\n    "],[1,"   "],[-1,"\n"],[1," \n    "],[0,"  _exten"]],"start1":2706,"start2":2706,"length1":17,"length2":25},{"diffs":[[0,"cts... ) ->\n"],[1,"    "],[0,"    result ="]],"start1":2740,"start2":2740,"length1":24,"length2":28},{"diffs":[[0,"result = {}\n"],[1,"    "],[0,"    for o in"]],"start1":2760,"start2":2760,"length1":24,"length2":28},{"diffs":[[0,"jects\n      "],[1," "],[1,"   "],[0,"for k, v of "]],"start1":2791,"start2":2791,"length1":24,"length2":28},{"diffs":[[0," v of o\n        "],[1,"  "],[1,"  "],[0,"result[k] ?= []\n"]],"start1":2813,"start2":2813,"length1":32,"length2":36},{"diffs":[[0,"lt[k] ?= []\n"],[1,"    "],[0,"        v = "]],"start1":2837,"start2":2837,"length1":24,"length2":28},{"diffs":[[0,"Array]'\n        "],[1,"   "],[1," "],[0,"result[k] = resu"]],"start1":2917,"start2":2917,"length1":32,"length2":36},{"diffs":[[0,"t(v...)\n"],[1,"    "],[0,"    retu"]],"start1":2964,"start2":2964,"length1":16,"length2":20},{"diffs":[[0,"esult\n  "],[1,"    "],[0,"\n"],[1,"    "],[0,"  reduce"]],"start1":2988,"start2":2988,"length1":17,"length2":25},{"diffs":[[0,"utputs ) =>\n"],[1,"    "],[0,"    ###\n    "]],"start1":3024,"start2":3024,"length1":24,"length2":28},{"diffs":[[0,"###\n    "],[1," "],[1,"   "],[0,"Checks f"]],"start1":3044,"start2":3044,"length1":16,"length2":20},{"diffs":[[0,"ations.\n"],[1,"    "],[0,"    ###\n"]],"start1":3094,"start2":3094,"length1":16,"length2":20},{"diffs":[[0,"    ###\n    "],[1,"   "],[1," "],[0,"for n, fn of"]],"start1":3106,"start2":3106,"length1":24,"length2":28},{"diffs":[[0,"n of @rules\n"],[1,"    "],[0,"      a = @a"]],"start1":3130,"start2":3130,"length1":24,"length2":28},{"diffs":[[0,"names( fn )\n"],[1,"    "],[0,"      args ="]],"start1":3161,"start2":3161,"length1":24,"length2":28},{"diffs":[[0," = []\n      "],[1,"    "],[0,"args.push( ("]],"start1":3187,"start2":3187,"length1":24,"length2":28},{"diffs":[[0,"in a )... )\n"],[1,"    "],[0,"      if a.l"]],"start1":3233,"start2":3233,"length1":24,"length2":28},{"diffs":[[0,"is rule\n        "],[1," "],[1,"   "],[0,"o = @run_rule( n"]],"start1":3293,"start2":3293,"length1":32,"length2":36},{"diffs":[[0,"rule( n, args )\n"],[1,"    "],[0,"        outputs "]],"start1":3322,"start2":3322,"length1":32,"length2":36},{"diffs":[[0,"ts, o )\n    "],[1,"  "],[1,"  "],[0,"return outpu"]],"start1":3375,"start2":3375,"length1":24,"length2":28},{"diffs":[[0,"tputs\n  "],[-1,"\n"],[1,"    \n    "],[0,"  map: ("]],"start1":3400,"start2":3400,"length1":17,"length2":25},{"diffs":[[0,"lt ) =>\n    "],[-1,"###\n"],[1,"    ###\n    "],[0,"    Runs all"]],"start1":3436,"start2":3436,"length1":28,"length2":36},{"diffs":[[0," input.\n    "],[1," "],[1,"   "],[0,"###\n"],[1,"    "],[0,"    if Objec"]],"start1":3521,"start2":3521,"length1":28,"length2":36},{"diffs":[[0,"ray]'\n      "],[1,"  "],[1,"  "],[0,"return @_ext"]],"start1":3598,"start2":3598,"length1":24,"length2":28},{"diffs":[[0,"sult )... )\n"],[1,"    "],[0,"    else\n   "]],"start1":3658,"start2":3658,"length1":24,"length2":28},{"diffs":[[0," else\n      "],[1,"   "],[1," "],[0,"output = {}\n"]],"start1":3677,"start2":3677,"length1":24,"length2":28},{"diffs":[[0,"output = {}\n"],[1,"    "],[0,"      # Find"]],"start1":3693,"start2":3693,"length1":24,"length2":28},{"diffs":[[0,"dants\n      "],[1,"    "],[0,"for n, fn of"]],"start1":3745,"start2":3745,"length1":24,"length2":28},{"diffs":[[0," @rules\n        "],[1," "],[1,"   "],[0,"a = @arg_names( "]],"start1":3773,"start2":3773,"length1":32,"length2":36},{"diffs":[[0,"arg_names( fn )\n"],[1,"    "],[0,"        if a.len"]],"start1":3798,"start2":3798,"length1":32,"length2":36},{"diffs":[[0," rule\n          "],[1,"  "],[1,"  "],[0,"o = @run_rule( n"]],"start1":3867,"start2":3867,"length1":32,"length2":36},{"diffs":[[0,"        "],[1,"    "],[0,"o[ rule "]],"start1":3916,"start2":3916,"length1":16,"length2":20},{"diffs":[[0,"t\n          "],[1,"   "],[1," "],[0,"o = @reduce("]],"start1":3945,"start2":3945,"length1":24,"length2":28},{"diffs":[[0,"( rule, o )\n"],[1,"    "],[0,"          ou"]],"start1":3972,"start2":3972,"length1":24,"length2":28},{"diffs":[[0,"output, o )\n"],[1,"    "],[0,"      output"]],"start1":4017,"start2":4017,"length1":24,"length2":28},{"diffs":[[0,"esult\n      "],[1,"    "],[0,"return outpu"]],"start1":4058,"start2":4058,"length1":24,"length2":28},{"diffs":[[0,"sult\n          return output"],[1,"\n    \n    module.exports = Funnel"]],"start1":4059,"start2":4059,"length1":28,"length2":61}]],"length":4120,"saved":false}
{"ts":1364787016524,"patch":[[{"diffs":[[0,"( fn )... )\n"],[1,"          \n                listen: ( fn ) =>\n        ###\n        Adds an anonymous function to the hash, used for hooking up result to a view.\n        ###\n        key = \"_#{Object.keys(@rules).length}\"\n        @rules.key = fn\n        @_compile()\n"],[0,"      \n     "]],"start1":1083,"start2":1083,"length1":24,"length2":270}]],"length":4366,"saved":false}
{"ts":1364787029035,"patch":[[{"diffs":[[0,"       \n"],[-1,"        "],[0,"        "]],"start1":1098,"start2":1098,"length1":24,"length2":16}]],"length":4358,"saved":false}
{"ts":1364787032476,"patch":[[{"diffs":[[0,"       \n"],[-1,"    "],[0,"    list"]],"start1":1098,"start2":1098,"length1":20,"length2":16}]],"length":4354,"saved":false}
{"ts":1364787036464,"patch":[[{"diffs":[[0,"   \n    "],[1,"  "],[0,"listen: "]],"start1":1102,"start2":1102,"length1":16,"length2":18}]],"length":4356,"saved":false}
{"ts":1364787040658,"patch":[[{"diffs":[[0,"  \n     "],[-1," "],[0,"listen: "]],"start1":1103,"start2":1103,"length1":17,"length2":16}]],"length":4355,"saved":false}
{"ts":1364787046233,"patch":[[{"diffs":[[0,"  \n     "],[1," "],[0,"listen: "]],"start1":1103,"start2":1103,"length1":16,"length2":17}]],"length":4356,"saved":false}
{"ts":1364787066912,"patch":[[{"diffs":[[0,"   \n"],[-1,"      _compile: =>\n        @lca_of_rule = {}\n        for name, fn of @rules\n          @[name] = ( args... ) => @run_rule( name, args )\n          @lca_of_rule[name] = @lca( @arg_names( fn )... )"],[0,"\n   "]],"start1":897,"start2":897,"length1":201,"length2":8}]],"length":4163,"saved":false}
{"ts":1364787072737,"patch":[[{"diffs":[[0,"ile()\n      "],[1,"    "],[0,"\n      arg_n"]],"start1":1132,"start2":1132,"length1":24,"length2":28}]],"length":4167,"saved":false}
{"ts":1364787073833,"patch":[[{"diffs":[[0,")\n          "],[1,"    "],[0,"\n      arg_n"]],"start1":1136,"start2":1136,"length1":24,"length2":28}]],"length":4171,"saved":false}
{"ts":1364787083476,"patch":[[{"diffs":[[0,"            "],[1,"_compile: =>\n        @lca_of_rule = {}\n        for name, fn of @rules\n          @[name] = ( args... ) => @run_rule( name, args )\n          @lca_of_rule[name] = @lca( @arg_names( fn )... )"],[0,"\n      arg_n"]],"start1":1140,"start2":1140,"length1":24,"length2":211}]],"length":4358,"saved":false}
{"ts":1364787091315,"patch":[[{"diffs":[[0,"mpile()\n"],[-1,"        "],[0,"      _c"]],"start1":1130,"start2":1130,"length1":24,"length2":16}]],"length":4350,"saved":false}
{"ts":1364787094526,"patch":[[{"diffs":[[0,"@_compile()\n"],[1,"        \n"],[0,"      _compi"]],"start1":1126,"start2":1126,"length1":24,"length2":33}]],"length":4359,"saved":false}
{"ts":1364787097597,"patch":[[{"diffs":[[0,"( fn )... )\n"],[1,"          \n"],[0,"      arg_na"]],"start1":1329,"start2":1329,"length1":24,"length2":35}]],"length":4370,"saved":false}
{"ts":1364787103165,"patch":[[{"diffs":[[0,"ams\n"],[-1,"      \n\n      \n"],[0,"    "]],"start1":1573,"start2":1573,"length1":23,"length2":8}]],"length":4355,"saved":false}
{"ts":1364787104220,"patch":[[{"diffs":[[0," params\n"],[1,"      \n\n      \n"],[0,"      lc"]],"start1":1569,"start2":1569,"length1":16,"length2":31}]],"length":4370,"saved":false}
{"ts":1364787108197,"patch":[[{"diffs":[[0,"s\n      "],[-1,"\n\n      "],[0,"\n      l"]],"start1":1575,"start2":1575,"length1":24,"length2":16}]],"length":4362,"saved":false}
{"ts":1364787120316,"patch":[[{"diffs":[[0,"t )\n"],[-1,"     \n      input: ( args... ) =>\n        ###\n        Run with the given input.\n        ###\n        return @map( 'input', args )\n"],[0,"    "]],"start1":2819,"start2":2819,"length1":137,"length2":8}]],"length":4233,"saved":false}
{"ts":1364787135418,"patch":[[{"diffs":[[0,"@_compile()\n"],[1,"     \n      input: ( args... ) =>\n        ###\n        Run with the given input.\n        ###\n        return @map( 'input', args )\n"],[0,"        \n   "]],"start1":1126,"start2":1126,"length1":24,"length2":153}]],"length":4362,"saved":false}
{"ts":1364787144480,"patch":[[{"diffs":[[0,"e()\n"],[-1,"      \n\n          \n"],[0,"    "]],"start1":890,"start2":890,"length1":27,"length2":8}]],"length":4343,"saved":false}
{"ts":1364787146465,"patch":[[{"diffs":[[0,"@_compile()\n"],[1,"        \n"],[0,"      listen"]],"start1":882,"start2":882,"length1":24,"length2":33}]],"length":4352,"saved":false}
{"ts":1364787171941,"patch":[[{"diffs":[[0,"el\n\n"],[-1,"### Compilation\n\nFunnel has a very quick compilation step that must happen every time you change\nthe rules. This is because we have to build the dependancy tree, otherwise we\nwould have to do a lot more work at runtime figuring out when each rule should\nbe kicked off.\n"],[0,"\n   "]],"start1":567,"start2":567,"length1":277,"length2":8}]],"length":4083,"saved":false}
{"ts":1364787176960,"patch":[[{"diffs":[[0," )\n        \n"],[1,"### Compilation\n\nFunnel has a very quick compilation step that must happen every time you change\nthe rules. This is because we have to build the dependancy tree, otherwise we\nwould have to do a lot more work at runtime figuring out when each rule should\nbe kicked off.\n"],[0,"      _compi"]],"start1":985,"start2":985,"length1":24,"length2":293}]],"length":4352,"saved":false}
{"ts":1364787180750,"patch":[[{"diffs":[[0,"ed off.\n"],[1,"\n"],[0,"      _c"]],"start1":1258,"start2":1258,"length1":16,"length2":17}]],"length":4353,"saved":false}
{"ts":1364787188205,"patch":[[{"diffs":[[0,"Funnel\n\n"],[1,"### \n"],[0,"\n      c"]],"start1":563,"start2":563,"length1":16,"length2":21}]],"length":4358,"saved":false}
{"ts":1364787188506,"patch":[[{"diffs":[[0,"el\n\n### "],[1,"P"],[0,"\n\n      "]],"start1":567,"start2":567,"length1":16,"length2":17}]],"length":4359,"saved":false}
{"ts":1364787192089,"patch":[[{"diffs":[[0,"l\n\n### P"],[1,"ublic API"],[0,"\n\n      "]],"start1":568,"start2":568,"length1":16,"length2":25}]],"length":4368,"saved":false}
{"ts":1364787195916,"patch":[[{"diffs":[[0,"ic API\n\n"],[1,"\n\n"],[0,"      co"]],"start1":579,"start2":579,"length1":16,"length2":18}]],"length":4370,"saved":false}
{"ts":1364787198994,"patch":[[{"diffs":[[0,"ic API\n\n"],[1,"Th"],[0,"\n\n      "]],"start1":579,"start2":579,"length1":16,"length2":18}]],"length":4372,"saved":false}
{"ts":1364787200242,"patch":[[{"diffs":[[0," API\n\nTh"],[1,"ese "],[0,"\n\n      "]],"start1":581,"start2":581,"length1":16,"length2":20}]],"length":4376,"saved":false}
{"ts":1364787202943,"patch":[[{"diffs":[[0,"\n\nThese "],[1,"are the function"],[0,"\n\n      "]],"start1":585,"start2":585,"length1":16,"length2":32}]],"length":4392,"saved":false}
{"ts":1364787210587,"patch":[[{"diffs":[[0,"\n\nTh"],[-1,"ese are"],[1,"is is"],[0," the"]],"start1":585,"start2":585,"length1":15,"length2":13},{"diffs":[[0,"function"],[1,"aliz"],[0,"\n\n      "]],"start1":599,"start2":599,"length1":16,"length2":20}]],"length":4394,"saved":false}
{"ts":1364787213784,"patch":[[{"diffs":[[0,"nali"],[-1,"z"],[1,"ty that the us"],[0,"\n\n  "]],"start1":606,"start2":606,"length1":9,"length2":22}]],"length":4407,"saved":false}
{"ts":1364787215759,"patch":[[{"diffs":[[0,"t the us"],[1,"er "],[0,"\n\n      "]],"start1":616,"start2":616,"length1":16,"length2":19}]],"length":4410,"saved":false}
{"ts":1364787220679,"patch":[[{"diffs":[[0,"he user "],[1,"is expected to implement"],[0,"\n\n      "]],"start1":619,"start2":619,"length1":16,"length2":40}]],"length":4434,"saved":false}
{"ts":1364787221549,"patch":[[{"diffs":[[0,"mplement"],[1,"."],[0,"\n\n      "]],"start1":643,"start2":643,"length1":16,"length2":17}]],"length":4435,"saved":false}
{"ts":1364787237255,"patch":[[{"diffs":[[0,"ement.\n\n"],[1,"The con\n\n"],[0,"      co"]],"start1":646,"start2":646,"length1":16,"length2":25}]],"length":4444,"saved":false}
{"ts":1364787239994,"patch":[[{"diffs":[[0,"\nThe con"],[1,"structor is"],[0,"\n\n      "]],"start1":653,"start2":653,"length1":16,"length2":27}]],"length":4455,"saved":false}
{"ts":1364787242376,"patch":[[{"diffs":[[0,"uctor is"],[1," pas"],[0,"\n\n      "]],"start1":664,"start2":664,"length1":16,"length2":20}]],"length":4459,"saved":false}
{"ts":1364787243898,"patch":[[{"diffs":[[0,"r is pas"],[1,"sed "],[0,"\n\n      "]],"start1":668,"start2":668,"length1":16,"length2":20}]],"length":4463,"saved":false}
{"ts":1364787246879,"patch":[[{"diffs":[[0," passed "],[1,"on object of"],[0,"\n\n      "]],"start1":672,"start2":672,"length1":16,"length2":28}]],"length":4475,"saved":false}
{"ts":1364787247695,"patch":[[{"diffs":[[0,"bject of"],[1," ru"],[0,"\n\n      "]],"start1":684,"start2":684,"length1":16,"length2":19}]],"length":4478,"saved":false}
{"ts":1364787248934,"patch":[[{"diffs":[[0,"ct of ru"],[1,"les"],[0,"\n\n      "]],"start1":687,"start2":687,"length1":16,"length2":19}]],"length":4481,"saved":false}
{"ts":1364787250770,"patch":[[{"diffs":[[0,"of rules"],[1,"."],[0,"\n\n      "]],"start1":690,"start2":690,"length1":16,"length2":17}]],"length":4482,"saved":false}
{"ts":1364787251766,"patch":[[{"diffs":[[0,"f rules."],[1," R"],[0,"\n\n      "]],"start1":691,"start2":691,"length1":16,"length2":18}]],"length":4484,"saved":false}
{"ts":1364787254820,"patch":[[{"diffs":[[0,"rules. R"],[1,"ules are simply f"],[0,"\n\n      "]],"start1":693,"start2":693,"length1":16,"length2":33}]],"length":4501,"saved":false}
{"ts":1364787257014,"patch":[[{"diffs":[[0,"simply f"],[1,"unctions th"],[0,"\n\n      "]],"start1":710,"start2":710,"length1":16,"length2":27}]],"length":4512,"saved":false}
{"ts":1364787258090,"patch":[[{"diffs":[[0,"tions th"],[1,"at"],[0,"\n\n      "]],"start1":721,"start2":721,"length1":16,"length2":18}]],"length":4514,"saved":false}
{"ts":1364787266649,"patch":[[{"diffs":[[0,"ons that"],[1,"\nget automatically called"],[0,"\n\n      "]],"start1":723,"start2":723,"length1":16,"length2":41}]],"length":4539,"saved":false}
{"ts":1364787268150,"patch":[[{"diffs":[[0,"y called"],[1," "],[0,"\n\n      "]],"start1":748,"start2":748,"length1":16,"length2":17}]],"length":4540,"saved":false}
{"ts":1364787271991,"patch":[[{"diffs":[[0," called "],[1,"with the result"],[0,"\n\n      "]],"start1":749,"start2":749,"length1":16,"length2":31}]],"length":4555,"saved":false}
{"ts":1364787276323,"patch":[[{"diffs":[[0,"e result"],[1,"s of other rules"],[0,"\n\n      "]],"start1":764,"start2":764,"length1":16,"length2":32}]],"length":4571,"saved":false}
{"ts":1364787283686,"patch":[[{"diffs":[[0,"er rules"],[1," when the inpu"],[0,"\n\n      "]],"start1":780,"start2":780,"length1":16,"length2":30}]],"length":4585,"saved":false}
{"ts":1364787285316,"patch":[[{"diffs":[[0,"hen the "],[-1,"inpu"],[0,"\n\n      "]],"start1":790,"start2":790,"length1":20,"length2":16}]],"length":4581,"saved":false}
{"ts":1364787291760,"patch":[[{"diffs":[[0,"when the"],[1,"re"],[0," \n\n     "]],"start1":789,"start2":789,"length1":16,"length2":18}]],"length":4583,"saved":false}
{"ts":1364787294435,"patch":[[{"diffs":[[0,"n there "],[1,"is the "],[0,"\n\n      "]],"start1":792,"start2":792,"length1":16,"length2":23}]],"length":4590,"saved":false}
{"ts":1364787297327,"patch":[[{"diffs":[[0,"n there "],[-1,"is the "],[0,"\n\n      "]],"start1":792,"start2":792,"length1":23,"length2":16}]],"length":4583,"saved":false}
{"ts":1364787303889,"patch":[[{"diffs":[[0,"hen "],[-1,"there "],[1,"all"],[0,"\n\n  "]],"start1":790,"start2":790,"length1":14,"length2":11}]],"length":4580,"saved":false}
{"ts":1364787305220,"patch":[[{"diffs":[[0,"when all"],[1," the"],[0,"\n\n      "]],"start1":789,"start2":789,"length1":16,"length2":20}]],"length":4584,"saved":false}
{"ts":1364787313828,"patch":[[{"diffs":[[0," all the"],[1," dependanc"],[0,"\n\n      "]],"start1":793,"start2":793,"length1":16,"length2":26}]],"length":4594,"saved":false}
{"ts":1364787314837,"patch":[[{"diffs":[[0,"ependanc"],[1,"ies"],[0,"\n\n      "]],"start1":803,"start2":803,"length1":16,"length2":19}]],"length":4597,"saved":false}
{"ts":1364787317041,"patch":[[{"diffs":[[0,"hen all the "],[1,"\n"],[0,"dependancies"]],"start1":790,"start2":790,"length1":24,"length2":25}]],"length":4598,"saved":false}
{"ts":1364787318511,"patch":[[{"diffs":[[0," all the"],[-1," "],[0,"\ndependa"]],"start1":793,"start2":793,"length1":17,"length2":16}]],"length":4597,"saved":false}
{"ts":1364787325154,"patch":[[{"diffs":[[0,"ndancies"],[1," of the rule have been satisfied "],[0,"\n\n      "]],"start1":806,"start2":806,"length1":16,"length2":49}]],"length":4630,"saved":false}
{"ts":1364787326196,"patch":[[{"diffs":[[0,"atisfied"],[-1," "],[1,"."],[0,"\n\n      "]],"start1":838,"start2":838,"length1":17,"length2":17}]],"length":4630,"saved":false}
{"ts":1364787337685,"patch":[[{"diffs":[[0,"ement.\n\n"],[1,"##\n\n"],[0,"The cons"]],"start1":646,"start2":646,"length1":16,"length2":20}]],"length":4634,"saved":false}
{"ts":1364787337984,"patch":[[{"diffs":[[0,"ent.\n\n##"],[1,"#"],[0,"\n\nThe co"]],"start1":648,"start2":648,"length1":16,"length2":17}]],"length":4635,"saved":false}
{"ts":1364787341281,"patch":[[{"diffs":[[0,"nt.\n\n###"],[1,"# Creat"],[0,"\n\nThe co"]],"start1":649,"start2":649,"length1":16,"length2":23}]],"length":4642,"saved":false}
{"ts":1364787343107,"patch":[[{"diffs":[[0,"## Creat"],[1,"ing a "],[0,"\n\nThe co"]],"start1":656,"start2":656,"length1":16,"length2":22}]],"length":4648,"saved":false}
{"ts":1364787346735,"patch":[[{"diffs":[[0,"ating a "],[1,"new "],[0,"\n\nThe co"]],"start1":662,"start2":662,"length1":16,"length2":20}]],"length":4652,"saved":false}
{"ts":1364787347902,"patch":[[{"diffs":[[0,"g a new "],[1,"`F"],[0,"\n\nThe co"]],"start1":666,"start2":666,"length1":16,"length2":18}]],"length":4654,"saved":false}
{"ts":1364787349027,"patch":[[{"diffs":[[0,"a new `F"],[1,"unnel"],[0,"\n\nThe co"]],"start1":668,"start2":668,"length1":16,"length2":21}]],"length":4659,"saved":false}
{"ts":1364787352800,"patch":[[{"diffs":[[0," `Funnel"],[1,"` object"],[0,"\n\nThe co"]],"start1":673,"start2":673,"length1":16,"length2":24}]],"length":4667,"saved":false}
{"ts":1364787376868,"patch":[[{"diffs":[[0,"sfied.\n\n"],[1,"\n\n"],[0,"      co"]],"start1":878,"start2":878,"length1":16,"length2":18}]],"length":4669,"saved":false}
{"ts":1364787388988,"patch":[[{"diffs":[[0,"sfied.\n\n"],[1,"What are the dependancies of a rule you ask?"],[0,"\n\n      "]],"start1":878,"start2":878,"length1":16,"length2":60}]],"length":4713,"saved":false}
{"ts":1364787398004,"patch":[[{"diffs":[[0,"you ask?"],[1," t"],[0,"\n\n      "]],"start1":922,"start2":922,"length1":16,"length2":18}]],"length":4715,"saved":false}
{"ts":1364787400821,"patch":[[{"diffs":[[0,"ou ask? "],[-1,"t"],[1,"They are as "],[0,"\n\n      "]],"start1":923,"start2":923,"length1":17,"length2":28}]],"length":4726,"saved":false}
{"ts":1364787402959,"patch":[[{"diffs":[[0," are as "],[1,"follows...\n"],[0,"\n\n      "]],"start1":935,"start2":935,"length1":16,"length2":27}]],"length":4737,"saved":false}
{"ts":1364787424109,"patch":[[{"diffs":[[0,"lows...\n"],[1,"1"],[0,"\n\n      "]],"start1":946,"start2":946,"length1":16,"length2":17}]],"length":4738,"saved":false}
{"ts":1364787425001,"patch":[[{"diffs":[[0,"ows...\n1"],[1,")"],[0,"\n\n      "]],"start1":947,"start2":947,"length1":16,"length2":17}]],"length":4739,"saved":false}
{"ts":1364787432785,"patch":[[{"diffs":[[0,"s..."],[-1,"\n1)"],[0,"\n\n  "]],"start1":949,"start2":949,"length1":11,"length2":8}]],"length":4736,"saved":false}
{"ts":1364787436739,"patch":[[{"diffs":[[0,"sk? "],[-1,"They are as follows..."],[0,"\n\n  "]],"start1":927,"start2":927,"length1":30,"length2":8}]],"length":4714,"saved":false}
{"ts":1364787441821,"patch":[[{"diffs":[[0,"you ask?"],[-1," "],[0,"\n\n      "]],"start1":922,"start2":922,"length1":17,"length2":16}]],"length":4713,"saved":false}
{"ts":1364787445975,"patch":[[{"diffs":[[0,"d.\n\n"],[-1,"What are the dependancies of a rule you ask?\n\n"],[0,"    "]],"start1":882,"start2":882,"length1":54,"length2":8}]],"length":4667,"saved":false}
{"contributors":[],"silentsave":true,"ts":1364790159643,"patch":[[{"diffs":[[0,"g a new "],[-1,"`"],[0,"Funnel"],[-1,"`"],[0," object\n"]],"start1":666,"start2":666,"length1":24,"length2":22},{"diffs":[[0,"d.\n\n"],[-1,"      constructor: ( @rules ) ->\n        @_compile()\n        \n      listen: ( fn ) ="],[1,"A rules dependancies are specified by the arguments it takes, you simply use the\nname of the rule you depend on as the argument name and `Funnel` recognizes it\nas a dependancy. The dependancies are considered satisfied when all of them have\nbeen executed at least once. Rules that were executed more than once in the time\nit took to satisfy the dependancies have their results passed through as an\narray.\n\n      constructor: ( @rules ) -"],[0,">\n  "]],"start1":880,"start2":880,"length1":92,"length2":445},{"diffs":[[0,"    "],[-1,"###\n        Adds an anonymous function to the hash, used for hooking up result to a view.\n        ###"],[1,"@compile()\n\n#### Listening to the results of your funnel\n\nListening to your funnel is the same as adding an anonymous rule. The only\ndifference is that you are guarenteed access to the scope where you defined your\nlistener function. The reason normal rules don't come with this guarentee is\nthat it will be much easier to scale a Funnel if we are only passing around\narguments.\n        \n      listen: ( fn ) =>"],[0,"\n   "]],"start1":1327,"start2":1327,"length1":109,"length2":418},{"diffs":[[0,"       @"],[-1,"_"],[0,"compile("]],"start1":1814,"start2":1814,"length1":17,"length2":16},{"diffs":[[0,"e()\n"],[-1,"     \n      input: ( args... ) =>\n        ###\n        Run with the given input"],[1,"\n#### Feeding your funnel data\n\nExpect this to change, but right now the only way to get data into your funnel\nis using the reserved input rule that passes through its arguments"],[0,".\n     "],[1,"\n"],[0,"   "],[-1,"###"],[1,"   input: ( args... ) =>"],[0,"\n   "]],"start1":1828,"start2":1828,"length1":99,"length2":220},{"diffs":[[0,"    \n###"],[1," Private Functionality\n\nFunnel.js requires some finesse in order to properly implement the API. This is\nCode you should not be calling when you use Funnel.\n\n####"],[0," Compila"]],"start1":2086,"start2":2086,"length1":16,"length2":177},{"diffs":[[0,"\n\n      "],[-1,"_"],[1,""],[0,"compile:"]],"start1":2520,"start2":2520,"length1":17,"length2":16},{"diffs":[[0,"   \n"],[-1,"      arg_names: ( func ) ->\n        ###\n        Helper for getting argument names of a function.\n        ###\n        reg = /\\(([\\s\\S]*?)\\)/\n        params = reg.exec(func)\n        return params[1].split(/\\s*,\\s*/) if params\n      \n      lca: ( rules... ) =>\n        ###\n        Find the lowest common ancestor of a list of rules"],[1,"#### Argument parsing\n\nFunnel needs to know what the names of the arguments are, normal software never\nneeds to do this, but since Funnel is almost a DSL it needs to do crazy stuff.\n\n      arg_names: ( func ) ->\n        reg = /\\(([\\s\\S]*?)\\)/\n        params = reg.exec(func)\n        return params[1].split(/\\s*,\\s*/) if params\n\n#### Lowest common ancestor\n\nThis is the most mathematical part of Funnel. It recursively computes which of\nits dependancies is lowest in the dependancy tree so we know which rule we come\nafter. This happens at compile time and can probably be optimized if need be"],[0,".\n      "],[1,"\n "],[0,"  "],[-1,"###"],[1,"   lca: ( rules... ) =>"],[0,"\n   "]],"start1":2722,"start2":2722,"length1":350,"length2":635},{"diffs":[[0," two_tmp"],[1,"\n\n#### Run the rule\n\nThis code runs a rule once its dependancies have been satisfied. It executes the\nrule after standardizing the arguments, and it returns the result of calling map\nwith the rules output."],[0,"\n     \n "]],"start1":4109,"start2":4109,"length1":16,"length2":221},{"diffs":[[0," rule, result )\n"],[1,"        \n#### Extend an object, much like _.extend\n\n\n"],[0,"        \n      _"]],"start1":4671,"start2":4671,"length1":32,"length2":85},{"diffs":[[0," \n      "],[-1,"_"],[0,"extend: "]],"start1":4747,"start2":4747,"length1":17,"length2":16},{"diffs":[[0," outputs = @"],[-1,"_"],[1,""],[0,"extend( outp"]],"start1":5378,"start2":5378,"length1":25,"length2":24},{"diffs":[[0,"return @"],[-1,"_"],[1,""],[0,"extend( "]],"start1":5642,"start2":5642,"length1":17,"length2":16},{"diffs":[[0,"tput = @"],[-1,"_"],[0,"extend( "]],"start1":6027,"start2":6027,"length1":17,"length2":16},{"diffs":[[0,"n output"],[1,"\n\nExport Funnel for all to use! It may be worth figuring out how to hide private\nfunctionality."],[0,"\n    \n  "]],"start1":6105,"start2":6105,"length1":16,"length2":111}]],"length":6241,"saved":false}
{"ts":1364790168835,"patch":[[{"diffs":[[0,"extend\n\n"],[1,"The only thing this is used for is building"],[0,"\n       "]],"start1":4731,"start2":4731,"length1":16,"length2":59}]],"length":6284,"saved":false}
{"ts":1364790275201,"patch":[[{"diffs":[[0,"\n\nTh"],[-1,"e only thing this is used for is building"],[1,"is is us"],[0,"\n   "]],"start1":4737,"start2":4737,"length1":49,"length2":16}]],"length":6251,"saved":false}
{"ts":1364790278796,"patch":[[{"diffs":[[0,"is is us"],[1,"ed for a coup"],[0,"\n       "]],"start1":4741,"start2":4741,"length1":16,"length2":29}]],"length":6264,"saved":false}
{"ts":1364790280967,"patch":[[{"diffs":[[0,"r a coup"],[1,"le of things"],[0,"\n       "]],"start1":4754,"start2":4754,"length1":16,"length2":28}]],"length":6276,"saved":false}
{"ts":1364790282796,"patch":[[{"diffs":[[0,"f things"],[1,", "],[0,"\n       "]],"start1":4766,"start2":4766,"length1":16,"length2":18}]],"length":6278,"saved":false}
{"ts":1364790286377,"patch":[[{"diffs":[[0,"things, "],[1,"probably ono"],[0,"\n       "]],"start1":4768,"start2":4768,"length1":16,"length2":28}]],"length":6290,"saved":false}
{"ts":1364790293086,"patch":[[{"diffs":[[0,"bly "],[-1,"ono"],[1,"another thing that could get\n"],[0,"\n   "]],"start1":4781,"start2":4781,"length1":11,"length2":37}]],"length":6316,"saved":false}
{"ts":1364790296774,"patch":[[{"diffs":[[0,"uld get\n"],[1,"optimized away a"],[0,"\n       "]],"start1":4806,"start2":4806,"length1":16,"length2":32}]],"length":6332,"saved":false}
{"ts":1364790299339,"patch":[[{"diffs":[[0,"d away a"],[1,"t some point."],[0,"\n       "]],"start1":4822,"start2":4822,"length1":16,"length2":29}]],"length":6345,"saved":false}
{"ts":1364790307691,"patch":[[{"diffs":[[0,"turn result\n"],[1,"\n"],[0,"      \n     "]],"start1":5115,"start2":5115,"length1":24,"length2":25}]],"length":6346,"saved":false}
{"ts":1364790310236,"patch":[[{"diffs":[[0,"result\n\n"],[1,"\n"],[0,"      \n "]],"start1":5120,"start2":5120,"length1":16,"length2":17}]],"length":6347,"saved":false}
{"ts":1364790312216,"patch":[[{"diffs":[[0,"result\n\n"],[1,"#### M"],[0,"\n      \n"]],"start1":5120,"start2":5120,"length1":16,"length2":22}]],"length":6353,"saved":false}
{"ts":1364790315460,"patch":[[{"diffs":[[0,"\n\n#### M"],[1,"APRE"],[0,"\n      \n"]],"start1":5126,"start2":5126,"length1":16,"length2":20}]],"length":6357,"saved":false}
{"ts":1364790316324,"patch":[[{"diffs":[[0,"## MAPRE"],[1,"D"],[0,"\n      \n"]],"start1":5130,"start2":5130,"length1":16,"length2":17}]],"length":6358,"saved":false}
{"ts":1364790316962,"patch":[[{"diffs":[[0,"# MAPRED"],[1,"US"],[0,"\n      \n"]],"start1":5131,"start2":5131,"length1":16,"length2":18}]],"length":6360,"saved":false}
{"ts":1364790319054,"patch":[[{"diffs":[[0," MAPREDU"],[-1,"S"],[1,"CE"],[0,"\n      \n"]],"start1":5132,"start2":5132,"length1":17,"length2":18}]],"length":6361,"saved":false}
{"ts":1364790319923,"patch":[[{"diffs":[[0,"APREDUCE"],[1,"!!!"],[0,"\n      \n"]],"start1":5134,"start2":5134,"length1":16,"length2":19}]],"length":6364,"saved":false}
{"ts":1364790321641,"patch":[[{"diffs":[[0,"EDUCE!!!"],[1," "],[0,"\n      \n"]],"start1":5137,"start2":5137,"length1":16,"length2":17}]],"length":6365,"saved":false}
{"ts":1364790323963,"patch":[[{"diffs":[[0,"EDUCE!!!"],[-1," "],[1,"\n"],[0,"\n      \n"]],"start1":5137,"start2":5137,"length1":17,"length2":17}]],"length":6365,"saved":false}
{"ts":1364790324902,"patch":[[{"diffs":[[0,"UCE!!!\n\n"],[1,"\n"],[0,"      \n "]],"start1":5139,"start2":5139,"length1":16,"length2":17}]],"length":6366,"saved":false}
{"ts":1364790333315,"patch":[[{"diffs":[[0,"UCE!!!\n\n"],[1,"The analo"],[0,"\n      \n"]],"start1":5139,"start2":5139,"length1":16,"length2":25}]],"length":6375,"saved":false}
{"ts":1364790334579,"patch":[[{"diffs":[[0,"e an"],[-1,"alo"],[1,"i"],[0,"\n   "]],"start1":5149,"start2":5149,"length1":11,"length2":9}]],"length":6373,"saved":false}
{"ts":1364790335923,"patch":[[{"diffs":[[0,"!\n\nThe a"],[-1,"ni"],[0,"\n      \n"]],"start1":5144,"start2":5144,"length1":18,"length2":16}]],"length":6371,"saved":false}
{"ts":1364790338531,"patch":[[{"diffs":[[0,"!\n\nThe a"],[1,"nalogy "],[0,"\n      \n"]],"start1":5144,"start2":5144,"length1":16,"length2":23}]],"length":6378,"saved":false}
{"ts":1364790340179,"patch":[[{"diffs":[[0,"analogy "],[1,"her"],[0,"\n      \n"]],"start1":5151,"start2":5151,"length1":16,"length2":19}]],"length":6381,"saved":false}
{"ts":1364790342857,"patch":[[{"diffs":[[0,"logy her"],[1,"e is "],[0,"\n      \n"]],"start1":5154,"start2":5154,"length1":16,"length2":21}]],"length":6386,"saved":false}
{"ts":1364790347962,"patch":[[{"diffs":[[0,"here is "],[1,"purely self indulgent,"],[0,"\n      \n"]],"start1":5159,"start2":5159,"length1":16,"length2":38}]],"length":6408,"saved":false}
{"ts":1364790351095,"patch":[[{"diffs":[[0,"ndulgent"],[-1,","],[1," as I"],[0,"\n      \n"]],"start1":5180,"start2":5180,"length1":17,"length2":21}]],"length":6412,"saved":false}
{"ts":1364790352149,"patch":[[{"diffs":[[0,"gent as "],[-1,"I"],[1,"i"],[0,"\n      \n"]],"start1":5184,"start2":5184,"length1":17,"length2":17}]],"length":6412,"saved":false}
{"ts":1364790355451,"patch":[[{"diffs":[[0,"gent as "],[-1,"i"],[1,"I'm fail"],[0,"\n      \n"]],"start1":5184,"start2":5184,"length1":17,"length2":24}]],"length":6419,"saved":false}
{"ts":1364790356441,"patch":[[{"diffs":[[0,"s I'm fa"],[-1,"il"],[0,"\n      \n"]],"start1":5190,"start2":5190,"length1":18,"length2":16}]],"length":6417,"saved":false}
{"ts":1364790357501,"patch":[[{"diffs":[[0,"s I'm fa"],[1,"ir"],[0,"\n      \n"]],"start1":5190,"start2":5190,"length1":16,"length2":18}]],"length":6419,"saved":false}
{"ts":1364790360635,"patch":[[{"diffs":[[0,"I'm fair"],[1,"ly certain "],[0,"\n      \n"]],"start1":5192,"start2":5192,"length1":16,"length2":27}]],"length":6430,"saved":false}
{"ts":1364790364703,"patch":[[{"diffs":[[0,"certain "],[1,"that Funnel"],[0,"\n      \n"]],"start1":5203,"start2":5203,"length1":16,"length2":27}]],"length":6441,"saved":false}
{"ts":1364790371339,"patch":[[{"diffs":[[0," Funnel\n"],[1,"could no longer be implemented as\n"],[0,"      \n "]],"start1":5215,"start2":5215,"length1":16,"length2":50}]],"length":6475,"saved":false}
{"ts":1364790374629,"patch":[[{"diffs":[[0,"ented as"],[1," a map reduce"],[0,"\n      \n"]],"start1":5248,"start2":5248,"length1":16,"length2":29}]],"length":6488,"saved":false}
{"ts":1364790376664,"patch":[[{"diffs":[[0,"p reduce"],[1," script"],[0,"\n      \n"]],"start1":5261,"start2":5261,"length1":16,"length2":23}]],"length":6495,"saved":false}
{"ts":1364790400355,"patch":[[{"diffs":[[0,"e script"],[1,"."],[0,"\n      \n"]],"start1":5268,"start2":5268,"length1":16,"length2":17}]],"length":6496,"saved":false}
{"ts":1364790404174,"patch":[[{"diffs":[[0," script."],[1," Howe"],[0,"\n      \n"]],"start1":5269,"start2":5269,"length1":16,"length2":21}]],"length":6501,"saved":false}
{"ts":1364790406710,"patch":[[{"diffs":[[0,"pt. Howe"],[1,"ver since"],[0,"\n      \n"]],"start1":5274,"start2":5274,"length1":16,"length2":25}]],"length":6510,"saved":false}
{"ts":1364790418523,"patch":[[{"diffs":[[0,"er since"],[1," it was\norigionally intended as a framework for ma"],[0,"\n      \n"]],"start1":5283,"start2":5283,"length1":16,"length2":66}]],"length":6560,"saved":false}
{"ts":1364790421216,"patch":[[{"diffs":[[0,"k for ma"],[1,"preduce, and"],[0,"\n      \n"]],"start1":5333,"start2":5333,"length1":16,"length2":28}]],"length":6572,"saved":false}
{"ts":1364790424308,"patch":[[{"diffs":[[0,"uce, and"],[1," it"],[0,"\n      \n"]],"start1":5345,"start2":5345,"length1":16,"length2":19}]],"length":6575,"saved":false}
{"ts":1364790426418,"patch":[[{"diffs":[[0,", and it"],[1," helps m"],[0,"\n      \n"]],"start1":5348,"start2":5348,"length1":16,"length2":24}]],"length":6583,"saved":false}
{"ts":1364790428926,"patch":[[{"diffs":[[0," helps m"],[1,"e conceptua"],[0,"\n      \n"]],"start1":5356,"start2":5356,"length1":16,"length2":27}]],"length":6594,"saved":false}
{"ts":1364790430575,"patch":[[{"diffs":[[0,"onceptua"],[1,"lize\n"],[0,"\n      \n"]],"start1":5367,"start2":5367,"length1":16,"length2":21}]],"length":6599,"saved":false}
{"ts":1364790433171,"patch":[[{"diffs":[[0,"tualize\n"],[1,"the "],[0,"\n      \n"]],"start1":5372,"start2":5372,"length1":16,"length2":20}]],"length":6603,"saved":false}
{"ts":1364790435481,"patch":[[{"diffs":[[0,"ize\nthe "],[1,"complex"],[0,"\n      \n"]],"start1":5376,"start2":5376,"length1":16,"length2":23}]],"length":6610,"saved":false}
{"ts":1364790471308,"patch":[[{"diffs":[[0," complex"],[1," behavior require"],[0,"\n      \n"]],"start1":5383,"start2":5383,"length1":16,"length2":33}]],"length":6627,"saved":false}
{"ts":1364790473761,"patch":[[{"diffs":[[0," require"],[1,"d to c"],[0,"\n      \n"]],"start1":5400,"start2":5400,"length1":16,"length2":22}]],"length":6633,"saved":false}
{"ts":1364790475413,"patch":[[{"diffs":[[0,"red to c"],[1,"arry"],[0,"\n      \n"]],"start1":5406,"start2":5406,"length1":16,"length2":20}]],"length":6637,"saved":false}
{"ts":1364790478670,"patch":[[{"diffs":[[0,"to carry"],[1," through th"],[0,"\n      \n"]],"start1":5410,"start2":5410,"length1":16,"length2":27}]],"length":6648,"saved":false}
{"ts":1364790482290,"patch":[[{"diffs":[[0,"rough th"],[1,"e execution of "],[0,"\n      \n"]],"start1":5421,"start2":5421,"length1":16,"length2":31}]],"length":6663,"saved":false}
{"ts":1364790485669,"patch":[[{"diffs":[[0,"tion of "],[1,"Funnel"],[0,"\n      \n"]],"start1":5436,"start2":5436,"length1":16,"length2":22}]],"length":6669,"saved":false}
{"ts":1364790489993,"patch":[[{"diffs":[[0,"f Funnel"],[1," with all\nthe approp"],[0,"\n      \n"]],"start1":5442,"start2":5442,"length1":16,"length2":36}]],"length":6689,"saved":false}
{"ts":1364790493851,"patch":[[{"diffs":[[0,"e approp"],[1,"riate dependancies"],[0,"\n      \n"]],"start1":5462,"start2":5462,"length1":16,"length2":34}]],"length":6707,"saved":false}
{"ts":1364790507258,"patch":[[{"diffs":[[0,"ndancies"],[1,", I will leav"],[0,"\n      \n"]],"start1":5480,"start2":5480,"length1":16,"length2":29}]],"length":6720,"saved":false}
{"ts":1364790509275,"patch":[[{"diffs":[[0,"ill leav"],[1,"e it "],[0,"\n      \n"]],"start1":5493,"start2":5493,"length1":16,"length2":21}]],"length":6725,"saved":false}
{"ts":1364790511810,"patch":[[{"diffs":[[0,"eave it "],[1,"as on"],[0,"\n      \n"]],"start1":5498,"start2":5498,"length1":16,"length2":21}]],"length":6730,"saved":false}
{"ts":1364790515888,"patch":[[{"diffs":[[0,"e it as "],[-1,"on"],[1,"a"],[0,"\n      \n"]],"start1":5501,"start2":5501,"length1":18,"length2":17}]],"length":6729,"saved":false}
{"ts":1364790517615,"patch":[[{"diffs":[[0," it as a"],[1,"n impe"],[0,"\n      \n"]],"start1":5502,"start2":5502,"length1":16,"length2":22}]],"length":6735,"saved":false}
{"ts":1364790520058,"patch":[[{"diffs":[[0," an impe"],[1,"rfect "],[0,"\n      \n"]],"start1":5508,"start2":5508,"length1":16,"length2":22}]],"length":6741,"saved":false}
{"ts":1364790522011,"patch":[[{"diffs":[[0,"perfect "],[1,"analo"],[0,"\n      \n"]],"start1":5514,"start2":5514,"length1":16,"length2":21}]],"length":6746,"saved":false}
{"ts":1364790522909,"patch":[[{"diffs":[[0,"ect anal"],[-1,"o"],[1,"a"],[0,"\n      \n"]],"start1":5518,"start2":5518,"length1":17,"length2":17}]],"length":6746,"saved":false}
{"ts":1364790524398,"patch":[[{"diffs":[[0,"ct anala"],[1,"gy"],[0,"\n      \n"]],"start1":5519,"start2":5519,"length1":16,"length2":18}]],"length":6748,"saved":false}
{"ts":1364790526177,"patch":[[{"diffs":[[0," analagy"],[1,"."],[0,"\n      \n"]],"start1":5521,"start2":5521,"length1":16,"length2":17}]],"length":6749,"saved":false}
{"ts":1364790545006,"patch":[[{"diffs":[[0,"ect anal"],[-1,"a"],[1,"o"],[0,"gy.\n    "]],"start1":5518,"start2":5518,"length1":17,"length2":17}]],"length":6749,"saved":false}
{"ts":1364790582397,"patch":[[{"diffs":[[0,"nalogy.\n"],[1,"\n\n"],[0,"      \n "]],"start1":5523,"start2":5523,"length1":16,"length2":18}]],"length":6751,"saved":false}
{"ts":1364790584650,"patch":[[{"diffs":[[0,"alogy.\n\n"],[1,"The "],[0,"\n      \n"]],"start1":5524,"start2":5524,"length1":16,"length2":20}]],"length":6755,"saved":false}
{"ts":1364790588292,"patch":[[{"diffs":[[0,"y.\n\nThe "],[1,"`reduce`"],[0,"\n      \n"]],"start1":5528,"start2":5528,"length1":16,"length2":24}]],"length":6763,"saved":false}
{"ts":1364790590240,"patch":[[{"diffs":[[0,"`reduce`"],[1," function"],[0,"\n      \n"]],"start1":5536,"start2":5536,"length1":16,"length2":25}]],"length":6772,"saved":false}
{"ts":1364790591501,"patch":[[{"diffs":[[0,"function"],[1," "],[0,"\n      \n"]],"start1":5545,"start2":5545,"length1":16,"length2":17}]],"length":6773,"saved":false}
{"ts":1364790598581,"patch":[[{"diffs":[[0,"unction "],[1,"is responsible"],[0,"\n      \n"]],"start1":5546,"start2":5546,"length1":16,"length2":30}]],"length":6787,"saved":false}
{"ts":1364790602131,"patch":[[{"diffs":[[0,"ponsible"],[1," for ha"],[0,"\n      \n"]],"start1":5560,"start2":5560,"length1":16,"length2":23}]],"length":6794,"saved":false}
{"ts":1364790608662,"patch":[[{"diffs":[[0,"e for ha"],[1,"ndling all of the rules that have\n"],[0,"\n      \n"]],"start1":5567,"start2":5567,"length1":16,"length2":50}]],"length":6828,"saved":false}
{"ts":1364790614393,"patch":[[{"diffs":[[0,"at have\n"],[1,"more than one dependancy."],[0,"\n      \n"]],"start1":5601,"start2":5601,"length1":16,"length2":41}]],"length":6853,"saved":false}
{"ts":1364790615394,"patch":[[{"diffs":[[0,"endancy."],[1," "],[0,"\n      \n"]],"start1":5626,"start2":5626,"length1":16,"length2":17}]],"length":6854,"saved":false}
{"ts":1364790617395,"patch":[[{"diffs":[[0,"ndancy. "],[1,"T"],[0,"\n      \n"]],"start1":5627,"start2":5627,"length1":16,"length2":17}]],"length":6855,"saved":false}
{"ts":1364790622307,"patch":[[{"diffs":[[0,"dancy. T"],[1,"he name is such becaus"],[0,"\n      \n"]],"start1":5628,"start2":5628,"length1":16,"length2":38}]],"length":6877,"saved":false}
{"ts":1364790623319,"patch":[[{"diffs":[[0,"h becaus"],[1,"e "],[0,"\n      \n"]],"start1":5650,"start2":5650,"length1":16,"length2":18}]],"length":6879,"saved":false}
{"ts":1364790625584,"patch":[[{"diffs":[[0,"because "],[1,"it take"],[0,"\n      \n"]],"start1":5652,"start2":5652,"length1":16,"length2":23}]],"length":6886,"saved":false}
{"ts":1364790626671,"patch":[[{"diffs":[[0," it take"],[1,"s"],[0,"\n      \n"]],"start1":5659,"start2":5659,"length1":16,"length2":17}]],"length":6887,"saved":false}
{"ts":1364790627601,"patch":[[{"diffs":[[0,"it takes"],[1," "],[0,"\n      \n"]],"start1":5660,"start2":5660,"length1":16,"length2":17}]],"length":6888,"saved":false}
{"ts":1364790631792,"patch":[[{"diffs":[[0,"t takes "],[1,"n inputs a"],[0,"\n      \n"]],"start1":5661,"start2":5661,"length1":16,"length2":26}]],"length":6898,"saved":false}
{"ts":1364790632835,"patch":[[{"diffs":[[0,"inputs a"],[1,"nd "],[0,"\n      \n"]],"start1":5671,"start2":5671,"length1":16,"length2":19}]],"length":6901,"saved":false}
{"ts":1364790698570,"patch":[[{"diffs":[[0,"use it t"],[-1,"ake"],[1,"urn"],[0,"s n inpu"]],"start1":5656,"start2":5656,"length1":19,"length2":19},{"diffs":[[0," inputs "],[-1,"and "],[1,"into one\noutput."],[0,"\n      \n"]],"start1":5670,"start2":5670,"length1":20,"length2":32},{"diffs":[[0," =>\n"],[-1,"        ###\n        Checks for newly fulfiled input combinations.\n        ###\n"],[0,"    "]],"start1":5733,"start2":5733,"length1":86,"length2":8},{"diffs":[[0,"outputs\n"],[-1,"      "],[1,"\nThe \n"],[0,"\n      m"]],"start1":6020,"start2":6020,"length1":22,"length2":22},{"diffs":[[0," =>\n"],[-1,"        ###\n        Runs all the single dependancy rules that follow from the input.\n        ###\n"],[0,"    "]],"start1":6062,"start2":6062,"length1":105,"length2":8}]],"length":6738,"saved":false}
{"ts":1364790706637,"patch":[[{"diffs":[[0,"tputs\n\nT"],[-1,"he "],[0,"\n\n      "]],"start1":6022,"start2":6022,"length1":19,"length2":16}]],"length":6735,"saved":false}
{"ts":1364790708014,"patch":[[{"diffs":[[0,"tputs\n\nT"],[1,"he `"],[0,"\n\n      "]],"start1":6022,"start2":6022,"length1":16,"length2":20}]],"length":6739,"saved":false}
{"ts":1364790709769,"patch":[[{"diffs":[[0,"s\n\nThe `"],[1,"m"],[0,"\n\n      "]],"start1":6026,"start2":6026,"length1":16,"length2":17}]],"length":6740,"saved":false}
{"ts":1364790712866,"patch":[[{"diffs":[[0,"\n\nThe `m"],[1,"ap"],[0,"\n\n      "]],"start1":6027,"start2":6027,"length1":16,"length2":18}]],"length":6742,"saved":false}
{"ts":1364790714523,"patch":[[{"diffs":[[0,"The `map"],[1,"` f"],[0,"\n\n      "]],"start1":6029,"start2":6029,"length1":16,"length2":19}]],"length":6745,"saved":false}
{"ts":1364790715926,"patch":[[{"diffs":[[0," `map` f"],[1,"unction"],[0,"\n\n      "]],"start1":6032,"start2":6032,"length1":16,"length2":23}]],"length":6752,"saved":false}
{"ts":1364790723829,"patch":[[{"diffs":[[0,"function"],[1," "],[0,"\n\n      "]],"start1":6039,"start2":6039,"length1":16,"length2":17}]],"length":6753,"saved":false}
{"ts":1364790727996,"patch":[[{"diffs":[[0,"unction "],[1,"handles all the rule"],[0,"\n\n      "]],"start1":6040,"start2":6040,"length1":16,"length2":36}]],"length":6773,"saved":false}
{"ts":1364790729722,"patch":[[{"diffs":[[0,"the rule"],[1,"s with"],[0,"\n\n      "]],"start1":6060,"start2":6060,"length1":16,"length2":22}]],"length":6779,"saved":false}
{"ts":1364790730659,"patch":[[{"diffs":[[0,"les with"],[1," "],[0,"\n\n      "]],"start1":6066,"start2":6066,"length1":16,"length2":17}]],"length":6780,"saved":false}
{"ts":1364790736085,"patch":[[{"diffs":[[0,"es with "],[1,"only one dependancy"],[0,"\n\n      "]],"start1":6067,"start2":6067,"length1":16,"length2":35}]],"length":6799,"saved":false}
{"ts":1364790739530,"patch":[[{"diffs":[[0,"pendancy"],[1,", thus"],[0,"\n\n      "]],"start1":6086,"start2":6086,"length1":16,"length2":22}]],"length":6805,"saved":false}
{"ts":1364790742115,"patch":[[{"diffs":[[0,"cy, thus"],[1," it te"],[0,"\n\n      "]],"start1":6092,"start2":6092,"length1":16,"length2":22}]],"length":6811,"saved":false}
{"ts":1364790745376,"patch":[[{"diffs":[[0,"us it te"],[1,"nds\nto"],[0,"\n\n      "]],"start1":6098,"start2":6098,"length1":16,"length2":22}]],"length":6817,"saved":false}
{"ts":1364790746862,"patch":[[{"diffs":[[0,"tends\nto"],[1," take"],[0,"\n\n      "]],"start1":6104,"start2":6104,"length1":16,"length2":21}]],"length":6822,"saved":false}
{"ts":1364790749447,"patch":[[{"diffs":[[0,"\nto take"],[1," a single "],[0,"\n\n      "]],"start1":6109,"start2":6109,"length1":16,"length2":26}]],"length":6832,"saved":false}
{"ts":1364790757737,"patch":[[{"diffs":[[0," single "],[1,"input"],[0,"\n\n      "]],"start1":6119,"start2":6119,"length1":16,"length2":21}]],"length":6837,"saved":false}
{"ts":1364790763283,"patch":[[{"diffs":[[0,"le input"],[1," and turn it into man"],[0,"\n\n      "]],"start1":6124,"start2":6124,"length1":16,"length2":37}]],"length":6858,"saved":false}
{"ts":1364790766456,"patch":[[{"diffs":[[0,"into man"],[1,"y outputs."],[0,"\n\n      "]],"start1":6145,"start2":6145,"length1":16,"length2":26}]],"length":6868,"saved":false}
{"ts":1364790867515,"patch":[[{"diffs":[[0,"#### MAP"],[1,"-"],[0,"REDUCE!!"]],"start1":5128,"start2":5128,"length1":16,"length2":17}]],"length":6869,"saved":false}
{"ts":1364790910674,"patch":[[{"diffs":[[0," {}\n"],[-1,"          # Find and run exclusive dependants\n"],[0,"    "]],"start1":6356,"start2":6356,"length1":54,"length2":8}]],"length":6823,"saved":false}
{"ts":1364790915046,"patch":[[{"diffs":[[0,"outputs."],[1," A"],[0,"\n\n      "]],"start1":6156,"start2":6156,"length1":16,"length2":18}]],"length":6825,"saved":false}
{"ts":1364790917426,"patch":[[{"diffs":[[0,"tputs. A"],[1,"diti"],[0,"\n\n      "]],"start1":6158,"start2":6158,"length1":16,"length2":20}]],"length":6829,"saved":false}
{"ts":1364790920898,"patch":[[{"diffs":[[0,". Ad"],[1,"d"],[0,"iti"],[1,"onally, "],[0,"\n\n  "]],"start1":6163,"start2":6163,"length1":11,"length2":20}]],"length":6838,"saved":false}
{"ts":1364790923514,"patch":[[{"diffs":[[0,"onally, "],[1,"if the input\n"],[0,"\n\n      "]],"start1":6171,"start2":6171,"length1":16,"length2":29}]],"length":6851,"saved":false}
{"ts":1364790931311,"patch":[[{"diffs":[[0,"e input\n"],[1,"to a rule is in the form of an array, "],[0,"\n\n      "]],"start1":6184,"start2":6184,"length1":16,"length2":54}]],"length":6889,"saved":false}
{"ts":1364790939895,"patch":[[{"diffs":[[0," array, "],[1,"the map function will spl"],[0,"\n\n      "]],"start1":6222,"start2":6222,"length1":16,"length2":41}]],"length":6914,"saved":false}
{"ts":1364790942579,"patch":[[{"diffs":[[0,"will spl"],[1,"it the array "],[0,"\n\n      "]],"start1":6247,"start2":6247,"length1":16,"length2":29}]],"length":6927,"saved":false}
{"ts":1364790943695,"patch":[[{"diffs":[[0,"e array "],[1,"and\n"],[0,"\n\n      "]],"start1":6260,"start2":6260,"length1":16,"length2":20}]],"length":6931,"saved":false}
{"ts":1364790945314,"patch":[[{"diffs":[[0,"ray and\n"],[1,"call t"],[0,"\n\n      "]],"start1":6264,"start2":6264,"length1":16,"length2":22}]],"length":6937,"saved":false}
{"ts":1364790950341,"patch":[[{"diffs":[[0,"d\ncall t"],[1,"he rule once with each "],[0,"\n\n      "]],"start1":6270,"start2":6270,"length1":16,"length2":39}]],"length":6960,"saved":false}
{"ts":1364790951969,"patch":[[{"diffs":[[0,"th each "],[1,"item "],[0,"\n\n      "]],"start1":6293,"start2":6293,"length1":16,"length2":21}]],"length":6965,"saved":false}
{"ts":1364790953571,"patch":[[{"diffs":[[0,"ch item "],[1,"in th"],[0,"\n\n      "]],"start1":6298,"start2":6298,"length1":16,"length2":21}]],"length":6970,"saved":false}
{"ts":1364790956837,"patch":[[{"diffs":[[0,"ach "],[-1,"item in th"],[1,"of its "],[0,"\n\n  "]],"start1":6297,"start2":6297,"length1":18,"length2":15}]],"length":6967,"saved":false}
{"ts":1364790959110,"patch":[[{"diffs":[[0," of its "],[1,"items."],[0,"\n\n      "]],"start1":6300,"start2":6300,"length1":16,"length2":22}]],"length":6973,"saved":false}
{"ts":1364790970424,"patch":[[{"diffs":[[0," =>\n"],[-1,"        ###\n        Run a rule through our experimental implementation.\n        ###\n"],[0,"    "]],"start1":4359,"start2":4359,"length1":92,"length2":8}]],"length":6889,"saved":false}
{"ts":1364790982040,"patch":[[{"diffs":[[0,". )\n"],[-1,"        # console.log( \"#{rule} was run with #{args} and returned #{result}.\" )\n"],[0,"    "]],"start1":4483,"start2":4483,"length1":88,"length2":8}]],"length":6809,"saved":false}
{"ts":1364791146267,"patch":[[{"diffs":[[0,"array.\n\n"],[1,"\n"],[0,"      co"]],"start1":1282,"start2":1282,"length1":16,"length2":17}]],"length":6810,"saved":false}
{"ts":1364791147135,"patch":[[{"diffs":[[0,"rray.\n\n\n"],[1,"\n"],[0,"      co"]],"start1":1283,"start2":1283,"length1":16,"length2":17}]],"length":6811,"saved":false}
{"ts":1364791148115,"patch":[[{"diffs":[[0,"ray.\n\n\n\n"],[1,"\n"],[0,"      co"]],"start1":1284,"start2":1284,"length1":16,"length2":17}]],"length":6812,"saved":false}
{"ts":1364791152791,"patch":[[{"diffs":[[0,"array.\n\n"],[1,"It is important to no"],[0,"\n\n\n     "]],"start1":1282,"start2":1282,"length1":16,"length2":37}]],"length":6833,"saved":false}
{"ts":1364791155246,"patch":[[{"diffs":[[0,"nt to no"],[1,"te"],[0,"\n\n\n     "]],"start1":1303,"start2":1303,"length1":16,"length2":18}]],"length":6835,"saved":false}
{"ts":1364791158486,"patch":[[{"diffs":[[0," to note"],[1," that argumen"],[0,"\n\n\n     "]],"start1":1305,"start2":1305,"length1":16,"length2":29}]],"length":6848,"saved":false}
{"ts":1364791163290,"patch":[[{"diffs":[[0,"te that "],[-1,"argumen"],[0,"\n\n\n     "]],"start1":1311,"start2":1311,"length1":23,"length2":16}]],"length":6841,"saved":false}
{"ts":1364791166850,"patch":[[{"diffs":[[0,"te that "],[1,"there "],[0,"\n\n\n     "]],"start1":1311,"start2":1311,"length1":16,"length2":22}]],"length":6847,"saved":false}
{"ts":1364791174809,"patch":[[{"diffs":[[0,"t there "],[1,"is work"],[0,"\n\n\n     "]],"start1":1317,"start2":1317,"length1":16,"length2":23}]],"length":6854,"saved":false}
{"ts":1364791181039,"patch":[[{"diffs":[[0," is work"],[1," that is done to transform the "],[0,"\n\n\n     "]],"start1":1324,"start2":1324,"length1":16,"length2":47}]],"length":6885,"saved":false}
{"ts":1364791182400,"patch":[[{"diffs":[[0,"orm the "],[1,"output"],[0,"\n\n\n     "]],"start1":1355,"start2":1355,"length1":16,"length2":22}]],"length":6891,"saved":false}
{"ts":1364791193044,"patch":[[{"diffs":[[0," output\n"],[1,"of a rule into the input of another.\n"],[0,"\n\n      "]],"start1":1362,"start2":1362,"length1":16,"length2":53}]],"length":6928,"saved":false}
{"ts":1364791214066,"patch":[[{"diffs":[[0,"ce. "],[-1,"Rules that were executed more than once in the time\nit took to satisfy the dependancies have their results passed through as an\narray."],[0,"\n\nIt"]],"start1":1150,"start2":1150,"length1":142,"length2":8}]],"length":6794,"saved":false}
{"ts":1364791216604,"patch":[[{"diffs":[[0,"another."],[1,"Rules that were executed more than once in the time\nit took to satisfy the dependancies have their results passed through as an\narray."],[0,"\n\n\n     "]],"start1":1264,"start2":1264,"length1":16,"length2":150}]],"length":6928,"saved":false}
{"ts":1364791221026,"patch":[[{"diffs":[[0,"another."],[1," "],[0,"Rules th"]],"start1":1264,"start2":1264,"length1":16,"length2":17}]],"length":6929,"saved":false}
{"ts":1364791227352,"patch":[[{"diffs":[[0," once in"],[-1," "],[1,"\n"],[0,"the time"]],"start1":1307,"start2":1307,"length1":17,"length2":17}]],"length":6929,"saved":false}
{"ts":1364791229986,"patch":[[{"diffs":[[0,"the time"],[-1,"\n"],[1," "],[0,"it took "]],"start1":1316,"start2":1316,"length1":17,"length2":17}]],"length":6929,"saved":false}
{"ts":1364791236162,"patch":[[{"diffs":[[0," through"],[-1," "],[1,"\n"],[0,"as an\nar"]],"start1":1386,"start2":1386,"length1":17,"length2":17}]],"length":6929,"saved":false}
{"ts":1364791238010,"patch":[[{"diffs":[[0,"gh\nas an"],[-1,"\n"],[1," "],[0,"array.\n\n"]],"start1":1392,"start2":1392,"length1":17,"length2":17}]],"length":6929,"saved":false}
{"ts":1364791241646,"patch":[[{"diffs":[[0,"nother. "],[1,"\n\n"],[0,"Rules th"]],"start1":1265,"start2":1265,"length1":16,"length2":18}]],"length":6931,"saved":false}
{"ts":1364791242569,"patch":[[{"diffs":[[0,"other. \n"],[-1,"\n"],[0,"Rules th"]],"start1":1266,"start2":1266,"length1":17,"length2":16}]],"length":6930,"saved":false}
{"ts":1364791243962,"patch":[[{"diffs":[[0,"other. \n"],[1,"1"],[0,"Rules th"]],"start1":1266,"start2":1266,"length1":16,"length2":17}]],"length":6931,"saved":false}
{"ts":1364791245150,"patch":[[{"diffs":[[0,"ther. \n1"],[1,") "],[0,"Rules th"]],"start1":1267,"start2":1267,"length1":16,"length2":18}]],"length":6933,"saved":false}
{"ts":1364791253124,"patch":[[{"diffs":[[0,"ther. \n1"],[-1,")"],[1,"."],[0," Rules t"]],"start1":1267,"start2":1267,"length1":17,"length2":17}]],"length":6933,"saved":false}
{"ts":1364791254540,"patch":[[{"diffs":[[0," once in"],[-1,"\n"],[1," "],[0,"the time"]],"start1":1311,"start2":1311,"length1":17,"length2":17}]],"length":6933,"saved":false}
{"ts":1364791258071,"patch":[[{"diffs":[[0," through"],[-1,"\n"],[1," "],[0,"as an ar"]],"start1":1390,"start2":1390,"length1":17,"length2":17}]],"length":6933,"saved":false}
{"ts":1364791262234,"patch":[[{"diffs":[[0," satisfy the"],[-1," "],[1,"\n"],[0,"dependancies"]],"start1":1339,"start2":1339,"length1":25,"length2":25}]],"length":6933,"saved":false}
{"ts":1364791265594,"patch":[[{"diffs":[[0,"another."],[-1," "],[1,"\n"],[0,"\n1. Rule"]],"start1":1264,"start2":1264,"length1":17,"length2":17}]],"length":6933,"saved":false}
{"ts":1364791267498,"patch":[[{"diffs":[[0,"rray.\n\n\n"],[1,"\n\n"],[0,"      co"]],"start1":1406,"start2":1406,"length1":16,"length2":18}]],"length":6935,"saved":false}
{"ts":1364791268777,"patch":[[{"diffs":[[0," array.\n"],[-1,"\n"],[1,"2"],[0,"\n\n\n     "]],"start1":1404,"start2":1404,"length1":17,"length2":17}]],"length":6935,"saved":false}
{"ts":1364791270399,"patch":[[{"diffs":[[0,"array.\n2"],[1,". "],[0,"\n\n\n     "]],"start1":1405,"start2":1405,"length1":16,"length2":18}]],"length":6937,"saved":false}
{"ts":1364791271563,"patch":[[{"diffs":[[0,"ray.\n2. "],[1,"R"],[0,"\n\n\n     "]],"start1":1407,"start2":1407,"length1":16,"length2":17}]],"length":6938,"saved":false}
{"ts":1364791272561,"patch":[[{"diffs":[[0,"ay.\n2. R"],[1,"ul"],[0,"\n\n\n     "]],"start1":1408,"start2":1408,"length1":16,"length2":18}]],"length":6940,"saved":false}
{"ts":1364791273489,"patch":[[{"diffs":[[0,".\n2. Rul"],[1,"e"],[0,"\n\n\n     "]],"start1":1410,"start2":1410,"length1":16,"length2":17}]],"length":6941,"saved":false}
{"ts":1364791274425,"patch":[[{"diffs":[[0,"\n2. Rule"],[1,"s"],[0,"\n\n\n     "]],"start1":1411,"start2":1411,"length1":16,"length2":17}]],"length":6942,"saved":false}
{"ts":1364791280275,"patch":[[{"diffs":[[0,"2. Rules"],[1," that return a"],[0,"\n\n\n     "]],"start1":1412,"start2":1412,"length1":16,"length2":30}]],"length":6956,"saved":false}
{"ts":1364791288750,"patch":[[{"diffs":[[0,"les "],[-1,"that return a"],[0,"\n\n\n "]],"start1":1417,"start2":1417,"length1":21,"length2":8}]],"length":6943,"saved":false}
{"ts":1364791307815,"patch":[[{"diffs":[[0,"ray.\n2. "],[-1,"Rules "],[0,"\n\n\n     "]],"start1":1407,"start2":1407,"length1":22,"length2":16}]],"length":6937,"saved":false}
{"ts":1364791310785,"patch":[[{"diffs":[[0,"ray.\n2. "],[1,"Rules th"],[0,"\n\n\n     "]],"start1":1407,"start2":1407,"length1":16,"length2":24}]],"length":6945,"saved":false}
{"ts":1364791312541,"patch":[[{"diffs":[[0,"Rules th"],[1,"at r"],[0,"\n\n\n     "]],"start1":1415,"start2":1415,"length1":16,"length2":20}]],"length":6949,"saved":false}
{"ts":1364791314561,"patch":[[{"diffs":[[0,"s that r"],[1,"eturn"],[0,"\n\n\n     "]],"start1":1419,"start2":1419,"length1":16,"length2":21}]],"length":6954,"saved":false}
{"ts":1364791323173,"patch":[[{"diffs":[[0,"es that "],[-1,"return"],[0,"\n\n\n     "]],"start1":1418,"start2":1418,"length1":22,"length2":16}]],"length":6948,"saved":false}
{"ts":1364791326317,"patch":[[{"diffs":[[0,"es that "],[1,"ha"],[0,"\n\n\n     "]],"start1":1418,"start2":1418,"length1":16,"length2":18}]],"length":6950,"saved":false}
{"ts":1364791328880,"patch":[[{"diffs":[[0," that ha"],[1,"ve their d"],[0,"\n\n\n     "]],"start1":1420,"start2":1420,"length1":16,"length2":26}]],"length":6960,"saved":false}
{"ts":1364791331521,"patch":[[{"diffs":[[0," their d"],[1,"ependancies "],[0,"\n\n\n     "]],"start1":1430,"start2":1430,"length1":16,"length2":28}]],"length":6972,"saved":false}
{"ts":1364791336652,"patch":[[{"diffs":[[0,"dancies "],[1,"satisfied more then once"],[0,"\n\n\n     "]],"start1":1442,"start2":1442,"length1":16,"length2":40}]],"length":6996,"saved":false}
{"ts":1364791338806,"patch":[[{"diffs":[[0,"hen once"],[1," in i"],[0,"\n\n\n     "]],"start1":1466,"start2":1466,"length1":16,"length2":21}]],"length":7001,"saved":false}
{"ts":1364791341159,"patch":[[{"diffs":[[0,"once in "],[-1,"i"],[1,"a step,"],[0,"\n\n\n     "]],"start1":1470,"start2":1470,"length1":17,"length2":23}]],"length":7007,"saved":false}
{"ts":1364791351204,"patch":[[{"diffs":[[0," a step,"],[1," for\ninstance rules that return an array"],[0,"\n\n\n     "]],"start1":1477,"start2":1477,"length1":16,"length2":56}]],"length":7047,"saved":false}
{"ts":1364791367664,"patch":[[{"diffs":[[0,"hat "],[-1,"return an array"],[0,"\n\n\n "]],"start1":1506,"start2":1506,"length1":23,"length2":8}]],"length":7032,"saved":false}
{"ts":1364791377957,"patch":[[{"diffs":[[0,"es that "],[1,"are the LCA of another rule and return an array"],[0,"\n\n\n     "]],"start1":1502,"start2":1502,"length1":16,"length2":63}]],"length":7079,"saved":false}
{"ts":1364791381989,"patch":[[{"diffs":[[0,"an array"],[1,", wil"],[0,"\n\n\n     "]],"start1":1549,"start2":1549,"length1":16,"length2":21}]],"length":7084,"saved":false}
{"ts":1364791383822,"patch":[[{"diffs":[[0,"ray, wil"],[1,"l get "],[0,"\n\n\n     "]],"start1":1554,"start2":1554,"length1":16,"length2":22}]],"length":7090,"saved":false}
{"ts":1364791393842,"patch":[[{"diffs":[[0,"will get"],[1,"\ncalled once for every item in"],[0," \n\n\n    "]],"start1":1559,"start2":1559,"length1":16,"length2":46}]],"length":7120,"saved":false}
{"ts":1364791395194,"patch":[[{"diffs":[[0,"item in "],[1,"the arr"],[0,"\n\n\n     "]],"start1":1590,"start2":1590,"length1":16,"length2":23}]],"length":7127,"saved":false}
{"ts":1364791396530,"patch":[[{"diffs":[[0," the arr"],[1,"ay"],[0,"\n\n\n     "]],"start1":1597,"start2":1597,"length1":16,"length2":18}]],"length":7129,"saved":false}
{"ts":1364791403946,"patch":[[{"diffs":[[0,"he array"],[1,"."],[0,"\n\n\n     "]],"start1":1599,"start2":1599,"length1":16,"length2":17}]],"length":7130,"saved":false}
{"ts":1364791444167,"patch":[[{"diffs":[[0,"\n2. "],[-1,"Rules that have their dependancies satisfied more then once in a step, for\ninstance rules that are the LCA of another rule and return an array, will get\ncalled once for every item in the arra"],[0,"y.\n\n"]],"start1":1411,"start2":1411,"length1":199,"length2":8}]],"length":6939,"saved":false}
{"ts":1364791445152,"patch":[[{"diffs":[[0,"ray.\n2. "],[-1,"y"],[0,".\n\n\n    "]],"start1":1407,"start2":1407,"length1":17,"length2":16}]],"length":6938,"saved":false}
{"ts":1364791451373,"patch":[[{"diffs":[[0,"rray.\n2."],[1," Rules with a single dependancy"],[0," .\n\n\n   "]],"start1":1406,"start2":1406,"length1":16,"length2":47}]],"length":6969,"saved":false}
{"ts":1364791454519,"patch":[[{"diffs":[[0,"endancy "],[1,"that ha"],[0,".\n\n\n    "]],"start1":1438,"start2":1438,"length1":16,"length2":23}]],"length":6976,"saved":false}
{"ts":1364791459441,"patch":[[{"diffs":[[0," that ha"],[1,"s returned an array "],[0,".\n\n\n    "]],"start1":1445,"start2":1445,"length1":16,"length2":36}]],"length":6996,"saved":false}
{"ts":1364791463231,"patch":[[{"diffs":[[0,"n array "],[1,"as its result are\n"],[0,".\n\n\n    "]],"start1":1465,"start2":1465,"length1":16,"length2":34}]],"length":7014,"saved":false}
{"ts":1364791465756,"patch":[[{"diffs":[[0,"ult are\n"],[1,"called"],[0,".\n\n\n    "]],"start1":1483,"start2":1483,"length1":16,"length2":22}]],"length":7020,"saved":false}
{"ts":1364791468894,"patch":[[{"diffs":[[0,"e\ncalled"],[1," "],[0,".\n\n\n    "]],"start1":1489,"start2":1489,"length1":16,"length2":17}]],"length":7021,"saved":false}
{"ts":1364791475989,"patch":[[{"diffs":[[0,"\ncalled "],[1,"once with each of the items in the array"],[0,".\n\n\n    "]],"start1":1490,"start2":1490,"length1":16,"length2":56}]],"length":7061,"saved":false}
{"ts":1364791479121,"patch":[[{"diffs":[[0,"he array"],[1," "],[0,".\n\n\n    "]],"start1":1530,"start2":1530,"length1":16,"length2":17}]],"length":7062,"saved":false}
{"ts":1364791479896,"patch":[[{"diffs":[[0,"he array"],[-1," "],[0,".\n\n\n    "]],"start1":1530,"start2":1530,"length1":17,"length2":16}]],"length":7061,"saved":false}
{"ts":1364791480740,"patch":[[{"diffs":[[0,"e array."],[1," ("],[0,"\n\n\n     "]],"start1":1531,"start2":1531,"length1":16,"length2":18}]],"length":7063,"saved":false}
{"ts":1364791484070,"patch":[[{"diffs":[[0,"array. ("],[1,"mapping)"],[0,"\n\n\n     "]],"start1":1533,"start2":1533,"length1":16,"length2":24}]],"length":7071,"saved":false}
{"ts":1364791495043,"patch":[[{"diffs":[[0,"ray."],[-1," (mapping)"],[0,"\n\n\n "]],"start1":1535,"start2":1535,"length1":18,"length2":8}]],"length":7061,"saved":false}
