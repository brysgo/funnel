{"ts":1364783373562,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"<!DOCTYPE html>\n\n<html>\n<head>\n  <title>#</title>\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, target-densitydpi=160dpi, initial-scale=1.0; maximum-scale=1.0; user-scalable=0;\">\n  <link rel=\"stylesheet\" media=\"all\" href=\"docco.css\" />\n</head>\n<body>\n  <div id=\"container\">\n    <div id=\"background\"></div>\n    \n    <ul class=\"sections\">\n        \n        \n        \n        <li id=\"section-1\">\n            <div class=\"annotation\">\n              \n              <div class=\"pilwrap for-h1\">\n                <a class=\"pilcrow\" href=\"#section-1\">&#182;</a>\n              </div>\n              <h1>#</h1>\n<p>Copyright (c) 2013 Bryan Goldstein</p>\n<p>Permission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the &quot;Software&quot;), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.</p>\n<p>THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</p>\n<h2>SOFTWARE.</h2>\n\n            </div>\n            \n        </li>\n        \n        \n        <li id=\"section-2\">\n            <div class=\"annotation\">\n              \n              <div class=\"pilwrap \">\n                <a class=\"pilcrow\" href=\"#section-2\">&#182;</a>\n              </div>\n              <p>Funnel.js is the natural evolution of map-reduce. The goal of Funnel is to\nprovide an elegant way to build large, scalable, reactive apps without\nthe need for magically scaling databases or super ninja skills.</p>\n<h1>#</h1>\n<h1>#</h1>\n\n            </div>\n            \n            <div class=\"content\"><div class='highlight'><pre>Experimental Serial Implementation <span class=\"keyword\">of</span> Funnel.js API</pre></div></div>\n            \n        </li>\n        \n        \n        <li id=\"section-3\">\n            <div class=\"annotation\">\n              \n              <div class=\"pilwrap for-h1\">\n                <a class=\"pilcrow\" href=\"#section-3\">&#182;</a>\n              </div>\n              <h1>#</h1>\n\n            </div>\n            \n            <div class=\"content\"><div class='highlight'><pre> \nmodule.exports = <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Funnel</span></span>\n  \n  constructor: ( <span class=\"property\">@rules</span> ) -&gt;</pre></div></div>\n            \n        </li>\n        \n        \n        <li id=\"section-4\">\n            <div class=\"annotation\">\n              \n              <div class=\"pilwrap for-h1\">\n                <a class=\"pilcrow\" href=\"#section-4\">&#182;</a>\n              </div>\n              <h1>#</h1>\n\n            </div>\n            \n            <div class=\"content\"><div class='highlight'><pre>    Define shortcuts <span class=\"keyword\">for</span> running rules.</pre></div></div>\n            \n        </li>\n        \n        \n        <li id=\"section-5\">\n            <div class=\"annotation\">\n              \n              <div class=\"pilwrap for-h1\">\n                <a class=\"pilcrow\" href=\"#section-5\">&#182;</a>\n              </div>\n              <h1>#</h1>\n\n            </div>\n            \n            <div class=\"content\"><div class='highlight'><pre>    <span class=\"property\">@_compile</span>()\n  \n  _compile: =&gt;\n    <span class=\"property\">@lca_of_rule</span> = {}\n    <span class=\"keyword\">for</span> name, fn <span class=\"keyword\">of</span> <span class=\"property\">@rules</span>\n      @[name] = ( args... ) =&gt; <span class=\"property\">@run_rule</span>( name, args )\n      <span class=\"property\">@lca_of_rule</span>[name] = <span class=\"property\">@lca</span>( <span class=\"property\">@arg_names</span>( fn )... )\n  \n  arg_names: ( func ) -&gt;</pre></div></div>\n            \n        </li>\n        \n        \n        <li id=\"section-6\">\n            <div class=\"annotation\">\n              \n              <div class=\"pilwrap for-h1\">\n                <a class=\"pilcrow\" href=\"#section-6\">&#182;</a>\n              </div>\n              <h1>#</h1>\n\n            </div>\n            \n            <div class=\"content\"><div class='highlight'><pre>    Helper <span class=\"keyword\">for</span> getting argument names <span class=\"keyword\">of</span> a <span class=\"reserved\">function</span>.</pre></div></div>\n            \n        </li>\n        \n        \n        <li id=\"section-7\">\n            <div class=\"annotation\">\n              \n              <div class=\"pilwrap for-h1\">\n                <a class=\"pilcrow\" href=\"#section-7\">&#182;</a>\n              </div>\n              <h1>#</h1>\n\n            </div>\n            \n            <div class=\"content\"><div class='highlight'><pre>    reg = <span class=\"regexp\">/\\(([\\s\\S]*?)\\)/</span>\n    params = reg.exec(func)\n    <span class=\"keyword\">return</span> params[<span class=\"number\">1</span>].split(<span class=\"regexp\">/\\s*,\\s*/</span>) <span class=\"keyword\">if</span> params\n  \n  listen: ( fn ) =&gt;</pre></div></div>\n            \n        </li>\n        \n        \n        <li id=\"section-8\">\n            <div class=\"annotation\">\n              \n              <div class=\"pilwrap for-h1\">\n                <a class=\"pilcrow\" href=\"#section-8\">&#182;</a>\n              </div>\n              <h1>#</h1>\n\n            </div>\n            \n            <div class=\"content\"><div class='highlight'><pre>    Adds an anonymous <span class=\"reserved\">function</span> to the hash, used <span class=\"keyword\">for</span> hooking up result to a view.</pre></div></div>\n            \n        </li>\n        \n        \n        <li id=\"section-9\">\n            <div class=\"annotation\">\n              \n              <div class=\"pilwrap for-h1\">\n                <a class=\"pilcrow\" href=\"#section-9\">&#182;</a>\n              </div>\n              <h1>#</h1>\n\n            </div>\n            \n            <div class=\"content\"><div class='highlight'><pre>    key = <span class=\"string\">\"_<span class=\"subst\">#{Object.keys(@rules).length}</span>\"</span>\n    <span class=\"property\">@rules</span>.key = fn\n    <span class=\"property\">@_compile</span>()\n  \n  lca: ( rules... ) =&gt;</pre></div></div>\n            \n        </li>\n        \n        \n        <li id=\"section-10\">\n            <div class=\"annotation\">\n              \n              <div class=\"pilwrap for-h1\">\n                <a class=\"pilcrow\" href=\"#section-10\">&#182;</a>\n              </div>\n              <h1>#</h1>\n\n            </div>\n            \n            <div class=\"content\"><div class='highlight'><pre>    Find the lowest common ancestor <span class=\"keyword\">of</span> a list <span class=\"keyword\">of</span> rules.</pre></div></div>\n            \n        </li>\n        \n        \n        <li id=\"section-11\">\n            <div class=\"annotation\">\n              \n              <div class=\"pilwrap for-h1\">\n                <a class=\"pilcrow\" href=\"#section-11\">&#182;</a>\n              </div>\n              <h1>#</h1>\n\n            </div>\n            \n            <div class=\"content\"><div class='highlight'><pre>    <span class=\"keyword\">if</span> rules.length &gt; <span class=\"number\">2</span>\n      <span class=\"keyword\">return</span> <span class=\"property\">@lca</span>( <span class=\"property\">@lca</span>(rules[<span class=\"number\">0.</span>.<span class=\"number\">.2</span>]...), <span class=\"property\">@lca</span>(rules[<span class=\"number\">2.</span>.]...) )\n    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> rules.length <span class=\"keyword\">is</span> <span class=\"number\">1</span>\n      <span class=\"keyword\">return</span> rules[<span class=\"number\">0</span>]\n    <span class=\"keyword\">else</span>\n      [ one, two ] = rules\n      one_ancestors = [ ]\n      two_ancestors = [ ]\n      one_tmp = [ one ]\n      two_tmp = [ two ]\n      <span class=\"keyword\">while</span> <span class=\"literal\">true</span>\n        one_ancestors = one_ancestors.concat( one_tmp )\n        two_ancestors = two_ancestors.concat( two_tmp )\n        <span class=\"keyword\">for</span> o <span class=\"keyword\">in</span> one_ancestors\n          <span class=\"keyword\">return</span> o <span class=\"keyword\">if</span> o <span class=\"keyword\">in</span> two_ancestors\n        one_tmp =  [].concat( (<span class=\"property\">@arg_names</span>(<span class=\"property\">@rules</span>[i]) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> one_tmp)... )\n        two_tmp =  [].concat( (<span class=\"property\">@arg_names</span>(<span class=\"property\">@rules</span>[i]) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> two_tmp)... )\n        <span class=\"keyword\">break</span> <span class=\"keyword\">if</span> <span class=\"literal\">undefined</span> <span class=\"keyword\">in</span> one_tmp <span class=\"keyword\">and</span> <span class=\"literal\">undefined</span> <span class=\"keyword\">in</span> two_tmp\n \n  run_rule: ( rule, args ) =&gt;</pre></div></div>\n            \n        </li>\n        \n        \n        <li id=\"section-12\">\n            <div class=\"annotation\">\n              \n              <div class=\"pilwrap for-h1\">\n                <a class=\"pilcrow\" href=\"#section-12\">&#182;</a>\n              </div>\n              <h1>#</h1>\n\n            </div>\n            \n            <div class=\"content\"><div class='highlight'><pre>    Run a rule through our experimental implementation.</pre></div></div>\n            \n        </li>\n        \n        \n        <li id=\"section-13\">\n            <div class=\"annotation\">\n              \n              <div class=\"pilwrap for-h1\">\n                <a class=\"pilcrow\" href=\"#section-13\">&#182;</a>\n              </div>\n              <h1>#</h1>\n\n            </div>\n            \n            <div class=\"content\"><div class='highlight'><pre>    args = [ args ] <span class=\"keyword\">unless</span> Object::toString.call( args ) <span class=\"keyword\">is</span> <span class=\"string\">'[object Array]'</span>\n    result = <span class=\"property\">@rules</span>[ rule ]( args... )</pre></div></div>\n            \n        </li>\n        \n        \n        <li id=\"section-14\">\n            <div class=\"annotation\">\n              \n              <div class=\"pilwrap \">\n                <a class=\"pilcrow\" href=\"#section-14\">&#182;</a>\n              </div>\n              <p>console.log( &quot;#{rule} was run with #{args} and returned #{result}.&quot; )</p>\n\n            </div>\n            \n            <div class=\"content\"><div class='highlight'><pre>    <span class=\"keyword\">return</span> <span class=\"property\">@map</span>( rule, result )\n \n  input: ( args... ) =&gt;</pre></div></div>\n            \n        </li>\n        \n        \n        <li id=\"section-15\">\n            <div class=\"annotation\">\n              \n              <div class=\"pilwrap for-h1\">\n                <a class=\"pilcrow\" href=\"#section-15\">&#182;</a>\n              </div>\n              <h1>#</h1>\n\n            </div>\n            \n            <div class=\"content\"><div class='highlight'><pre>    Run <span class=\"reserved\">with</span> the given input.</pre></div></div>\n            \n        </li>\n        \n        \n        <li id=\"section-16\">\n            <div class=\"annotation\">\n              \n              <div class=\"pilwrap for-h1\">\n                <a class=\"pilcrow\" href=\"#section-16\">&#182;</a>\n              </div>\n              <h1>#</h1>\n\n            </div>\n            \n            <div class=\"content\"><div class='highlight'><pre>    <span class=\"keyword\">return</span> <span class=\"property\">@map</span>( <span class=\"string\">'input'</span>, args )\n    \n  _extend: ( objects... ) -&gt;\n    result = {}\n    <span class=\"keyword\">for</span> o <span class=\"keyword\">in</span> objects\n      <span class=\"keyword\">for</span> k, v <span class=\"keyword\">of</span> o\n        result[k] ?= []\n        v = [ v ] <span class=\"keyword\">unless</span> Object::toString.call( v ) <span class=\"keyword\">is</span> <span class=\"string\">'[object Array]'</span>\n        result[k] = result[k].concat(v...)\n    <span class=\"keyword\">return</span> result\n  \n  reduce: ( rule, outputs ) =&gt;</pre></div></div>\n            \n        </li>\n        \n        \n        <li id=\"section-17\">\n            <div class=\"annotation\">\n              \n              <div class=\"pilwrap for-h1\">\n                <a class=\"pilcrow\" href=\"#section-17\">&#182;</a>\n              </div>\n              <h1>#</h1>\n\n            </div>\n            \n            <div class=\"content\"><div class='highlight'><pre>    Checks <span class=\"keyword\">for</span> newly fulfiled input combinations.</pre></div></div>\n            \n        </li>\n        \n        \n        <li id=\"section-18\">\n            <div class=\"annotation\">\n              \n              <div class=\"pilwrap for-h1\">\n                <a class=\"pilcrow\" href=\"#section-18\">&#182;</a>\n              </div>\n              <h1>#</h1>\n\n            </div>\n            \n            <div class=\"content\"><div class='highlight'><pre>    <span class=\"keyword\">for</span> n, fn <span class=\"keyword\">of</span> <span class=\"property\">@rules</span>\n      a = <span class=\"property\">@arg_names</span>( fn )\n      args = []\n      args.push( ( outputs[i] <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> a )... )\n      <span class=\"keyword\">if</span> a.length &gt; <span class=\"number\">1</span> <span class=\"keyword\">and</span> <span class=\"property\">@lca_of_rule</span>[ n ] <span class=\"keyword\">is</span> rule\n        o = <span class=\"property\">@run_rule</span>( n, args )\n        outputs = <span class=\"property\">@_extend</span>( outputs, o )\n    <span class=\"keyword\">return</span> outputs\n  \n  map: ( rule, result ) =&gt;</pre></div></div>\n            \n        </li>\n        \n        \n        <li id=\"section-19\">\n            <div class=\"annotation\">\n              \n              <div class=\"pilwrap for-h1\">\n                <a class=\"pilcrow\" href=\"#section-19\">&#182;</a>\n              </div>\n              <h1>#</h1>\n\n            </div>\n            \n            <div class=\"content\"><div class='highlight'><pre>    Runs all the single dependancy rules that follow from the input.</pre></div></div>\n            \n        </li>\n        \n        \n        <li id=\"section-20\">\n            <div class=\"annotation\">\n              \n              <div class=\"pilwrap for-h1\">\n                <a class=\"pilcrow\" href=\"#section-20\">&#182;</a>\n              </div>\n              <h1>#</h1>\n\n            </div>\n            \n            <div class=\"content\"><div class='highlight'><pre>    <span class=\"keyword\">if</span> Object::toString.call( result ) <span class=\"keyword\">is</span> <span class=\"string\">'[object Array]'</span>\n      <span class=\"keyword\">return</span> <span class=\"property\">@_extend</span>( ( <span class=\"property\">@map</span>(rule, r) <span class=\"keyword\">for</span> r <span class=\"keyword\">in</span> result )... )\n    <span class=\"keyword\">else</span>\n      output = {}</pre></div></div>\n            \n        </li>\n        \n        \n        <li id=\"section-21\">\n            <div class=\"annotation\">\n              \n              <div class=\"pilwrap \">\n                <a class=\"pilcrow\" href=\"#section-21\">&#182;</a>\n              </div>\n              <p>Find and run exclusive dependants</p>\n\n            </div>\n            \n            <div class=\"content\"><div class='highlight'><pre>      <span class=\"keyword\">for</span> n, fn <span class=\"keyword\">of</span> <span class=\"property\">@rules</span>\n        a = <span class=\"property\">@arg_names</span>( fn )\n        <span class=\"keyword\">if</span> a.length <span class=\"keyword\">is</span> <span class=\"number\">1</span> <span class=\"keyword\">and</span> <span class=\"property\">@lca_of_rule</span>[ n ] <span class=\"keyword\">is</span> rule\n          o = <span class=\"property\">@run_rule</span>( n, result )\n          o[ rule ] = result\n          o = <span class=\"property\">@reduce</span>( rule, o )\n          output = <span class=\"property\">@_extend</span>( output, o )\n      output[ rule ] ?= result\n      <span class=\"keyword\">return</span> output</pre></div></div>\n            \n        </li>\n        \n    </ul>\n  </div>\n</body>\n</html>\n"]],"start1":0,"start2":0,"length1":0,"length2":16645}]],"length":16645}
