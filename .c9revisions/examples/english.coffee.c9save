{"ts":1364778545821,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1364778709686,"patch":[[{"diffs":[[1,"require '../funnel'\n \n# Create our funnel\nobj = new Funnel(\n  # in this case only one rule depends on our 'input' - a reserved rule\n  word: (input) ->\n    return input.split(' ')\n  # 'char' depends on 'word', and splits them up into individual charicters\n  char: (word) ->\n    return (c for c in word)\n  # 'vowel' depends on 'char' and returns a boolean\n  vowel: (char) ->\n    return char.toLowerCase() in ['a','e','i','o','u']\n  # 'word_has_vowel' depends on 'word' and 'vowel'\n  word_has_vowel: (word, vowel) ->\n    # notice that vowel is a list of bools now\n    # this is because by the time the least common ancestor of 'word'\n    # and 'vowel' ('word') run, there are multiple values for 'vowel'\n    return true in vowel\n)\n \n# Listen to the event we are interested in\nobj.listen( (input, word_has_vowel) ->\n  _not = ''\n  _not = \"not\" if false in word_has_vowel\n  console.log( \"The sentence '#{input}' is #{_not} english!\" )\n)\n \n# Send the input\nobj.input( 'Hello I am an input string.' )\nobj.input( 'Hrllw y rm rn rnprt strng.' )"]],"start1":0,"start2":0,"length1":0,"length2":1034}]],"length":1034,"saved":false}
{"ts":1364778791398,"patch":[[{"diffs":[[-1,"require '../funnel'\n \n"],[0,"# Cr"]],"start1":0,"start2":0,"length1":26,"length2":4}]],"length":1012,"saved":false}
{"ts":1364779141488,"patch":[[{"diffs":[[1,"Funnel = require(\"./funnel\")\n\n"],[0,"# Create"]],"start1":0,"start2":0,"length1":8,"length2":38}]],"length":1042,"saved":false}
{"ts":1364779202440,"patch":[[{"diffs":[[0,"unnel\")\n"],[1,"debugger"],[0,"\n# Creat"]],"start1":21,"start2":21,"length1":16,"length2":24}]],"length":1050,"saved":false}
{"ts":1364779221952,"patch":[[{"diffs":[[0,"l\")\n"],[-1,"debugger"],[0,"\n# C"]],"start1":25,"start2":25,"length1":16,"length2":8}]],"length":1042,"saved":false}
{"ts":1364779230140,"patch":[[{"diffs":[[-1,"Funnel = "],[0,"requ"]],"start1":0,"start2":0,"length1":13,"length2":4}]],"length":1033,"saved":false}
{"ts":1364779456000,"patch":[[{"diffs":[[0,"quire(\"."],[1,"."],[0,"/funnel\""]],"start1":2,"start2":2,"length1":16,"length2":17}]],"length":1034,"saved":false}
{"ts":1364779566207,"patch":[[{"diffs":[[1,"var Funnel = "],[0,"require("]],"start1":0,"start2":0,"length1":8,"length2":21}]],"length":1047,"saved":false}
{"ts":1364779570046,"patch":[[{"diffs":[[-1,"var "],[0,"Funn"]],"start1":0,"start2":0,"length1":8,"length2":4}]],"length":1043,"saved":false}
{"ts":1364779603808,"patch":[[{"diffs":[[-1,"Funnel = "],[0,"requ"]],"start1":0,"start2":0,"length1":13,"length2":4}]],"length":1034,"saved":false}
{"ts":1364779626160,"patch":[[{"diffs":[[1,"Funnel = "],[0,"require("]],"start1":0,"start2":0,"length1":8,"length2":17}]],"length":1043,"saved":false}
{"ts":1364779642465,"patch":[[{"diffs":[[-1,"Funnel = "],[0,"requ"]],"start1":0,"start2":0,"length1":13,"length2":4}]],"length":1034,"saved":false}
{"contributors":[],"silentsave":false,"ts":1364780214625,"patch":[[{"diffs":[[1,"Funnel = "],[0,"require("]],"start1":0,"start2":0,"length1":8,"length2":17}]],"length":1043,"saved":false}
{"ts":1364780255599,"patch":[[{"diffs":[[-1,"Funnel = "],[0,"requ"]],"start1":0,"start2":0,"length1":13,"length2":4}]],"length":1034,"saved":false}
{"contributors":[],"silentsave":false,"ts":1364781963244,"patch":[[{"diffs":[[0,"ire(\"../"],[1,"src/"],[0,"funnel\")"]],"start1":4,"start2":4,"length1":16,"length2":20}]],"length":1038,"saved":false}
{"contributors":[],"silentsave":false,"ts":1364782070943,"patch":[[{"diffs":[[0,"\"../"],[-1,"src"],[1,"lib"],[0,"/fun"]],"start1":8,"start2":8,"length1":11,"length2":11}]],"length":1038,"saved":false}
{"ts":1364782142300,"patch":[[{"diffs":[[1,"Funnel = "],[0,"require("]],"start1":0,"start2":0,"length1":8,"length2":17}]],"length":1047,"saved":false}
{"ts":1364782161637,"patch":[[{"diffs":[[0,"unnel\")\n"],[1,"debugger"],[0,"\n# Creat"]],"start1":26,"start2":26,"length1":16,"length2":24}]],"length":1055,"saved":false}
{"ts":1364782176793,"patch":[[{"diffs":[[0,"l\")\n"],[-1,"debugger"],[0,"\n# C"]],"start1":30,"start2":30,"length1":16,"length2":8}]],"length":1047,"saved":false}
{"ts":1364782183661,"patch":[[{"diffs":[[0,"unnel\")\n"],[1,"console.log Funnel"],[0,"\n# Creat"]],"start1":26,"start2":26,"length1":16,"length2":34}]],"length":1065,"saved":false}
{"ts":1364782727526,"patch":[[{"diffs":[[-1,"Funnel = "],[0,"requ"]],"start1":0,"start2":0,"length1":13,"length2":4},{"diffs":[[0,"ole.log "],[-1,"Funnel"],[1,"@"],[0,"\n# Creat"]],"start1":29,"start2":29,"length1":22,"length2":17}]],"length":1051,"saved":false}
{"ts":1364782762594,"patch":[[{"diffs":[[1,"Funnel = "],[0,"require("]],"start1":0,"start2":0,"length1":8,"length2":17},{"diffs":[[0,"el\")"],[-1,"\nconsole.log @"],[1,".Funnel\n"],[0,"\n# C"]],"start1":29,"start2":29,"length1":22,"length2":16}]],"length":1054,"saved":false}
{"ts":1364783001813,"patch":[[{"diffs":[[0,"el\")"],[-1,".Funnel"],[0,"\n\n# "]],"start1":29,"start2":29,"length1":15,"length2":8}]],"length":1047,"saved":false}
{"contributors":[],"silentsave":true,"ts":1365207833773,"patch":[[{"diffs":[[0,"\"../"],[-1,"lib"],[1,"src"],[0,"/fun"]],"start1":17,"start2":17,"length1":11,"length2":11},{"diffs":[[0,"rt strng.' )"],[1,"\n"]],"start1":1035,"start2":1035,"length1":12,"length2":13}]],"length":1048,"saved":false}
{"ts":1365207836167,"patch":[[{"diffs":[[0,"t strng.' )\n"],[1,"\ndebugger"]],"start1":1036,"start2":1036,"length1":12,"length2":21}]],"length":1057,"saved":false}
