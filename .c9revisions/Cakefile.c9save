{"ts":1364780517270,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1364780553238,"patch":[[{"diffs":[[1,"CoffeeScript = require 'coffee-script'\n{exec} = require 'child_process'\nfs = require 'fs'\n \nSOURCES  = [\n  'funnel',\n  'examples/english'\n]\n \ntask 'features', 'Run the cucumber features (with mininal output)', ->\n  execOut 'cucumber -f progress'\n \ntask 'compile', 'Compile src/*.coffee into public/app.js ', ->\n  compile()\n \ntask 'spec', 'Run vows specs', ->\n  execOut 'vows spec/*.coffee'\n \ntask 'server', 'Start a web server to host the static application', ->\n  execOut 'coffee server.coffee'\n  \ntask 'watch', 'Compile and run specs (for watchr)', ->\n  invoke 'compile'\n  invoke 'spec'  \n    \ntask 'build', 'Compile, run specs, then features', ->\n  invoke 'compile'\n  invoke 'spec'\n  invoke 'features'\n \ncompile = =>\n  compileApp (scripts) ->\n    compileParser (parser) ->\n      scripts.push parser\n      writeAppJavaScript scripts  \n \nwriteAppJavaScript = (scripts) ->\n  fs.writeFile 'public/app.js', scripts.join('\\n\\n'), 'utf8', (err) ->\n    throw err if err\n  console.log \"> compiled public/app.js\"\n \ncompileParser = (withCompiledParser) ->\n  fs.readFile \"src/logo.jison\", 'utf8', (err, jison) ->\n    Parser = require(\"jison\").Parser\n    js = new Parser(jison).generate()\n    withCompiledParser \"(function() {\\n#{js}\\n\\nthis.parser = parser;\\n}).call(this)\"\n \ncompileApp = (withCompiledScripts) ->\n  compiledCoffee = new Array\n  for file, index in SOURCES then do (file, index) ->\n    fs.readFile \"src/#{file}.coffee\", 'utf8', (err, coffee) ->\n      throw err if err\n      compiledCoffee.push CoffeeScript.compile(coffee)\n      withCompiledScripts(compiledCoffee) if compiledCoffee.length == SOURCES.length\n \nexecOut = (commandLine) ->\n  exec(commandLine, (err, stdout, stderr) ->\n    console.log(\"> #{commandLine}\")\n    console.log(stdout)\n    console.log(stderr)\n  )"]],"start1":0,"start2":0,"length1":0,"length2":1775}]],"length":1775,"saved":false}
{"contributors":[],"silentsave":false,"ts":1364780805817,"patch":[[{"diffs":[[0,"oke 'compile'\n  "],[1,"#"],[0,"invoke 'spec'  \n"]],"start1":559,"start2":559,"length1":32,"length2":33},{"diffs":[[0,"'compile'\n  "],[1,"#"],[0,"invoke 'spec"]],"start1":660,"start2":660,"length1":24,"length2":25},{"diffs":[[0,"spec'\n  "],[1,"#"],[0,"invoke '"]],"start1":681,"start2":681,"length1":16,"length2":17},{"diffs":[[0,"adFile \""],[-1,"src/"],[0,"#{file}."]],"start1":1400,"start2":1400,"length1":20,"length2":16}]],"length":1774,"saved":false}
{"ts":1364781868548,"patch":[[{"diffs":[[-1,"CoffeeScript = require 'coffee-script'\n{exec} = require 'child_process'\nfs = require 'fs'\n \nSOURCES  = [\n  'funnel',\n  'examples/english'\n]\n \ntask 'features', 'Run the cucumber features (with mininal output)', ->\n  execOut 'cucumber -f progress'\n \ntask 'compile', 'Compile src/*.coffee into public/app.js ', ->\n  compile()\n \ntask 'spec', 'Run vows specs', ->\n  execOut 'vows spe"],[1,"{spawn, exec} = require 'child_process'\nlog = console.log\n\ntask 'build', ->\n  run 'coffee -o lib -c sr"],[0,"c/*."]],"start1":0,"start2":0,"length1":382,"length2":106},{"diffs":[[0,"ee'\n"],[-1," "],[0,"\ntask '"],[-1,"server', 'Start a web server to host the static application', ->\n  execOut 'coffee server.coffee'\n  \ntask 'watch', 'Compile and run specs (for watchr)', ->\n  invoke 'compile'\n  #invoke 'spec'  \n    \ntask 'build', 'Compile, run specs, then features', ->\n  invoke 'compile'\n  #invoke 'spec'\n  #invoke 'features'\n \ncompile = =>\n  compileApp (scripts) ->\n    compileParser (parser) ->\n      scripts.push parser\n      writeAppJavaScript scripts  \n \nwriteAppJavaScript = (scripts) ->\n  fs.writeFile 'public/app.js', scripts.join('\\n\\n'), 'utf8', (err) ->\n    throw err if err\n  console.log \"> compiled public/app.js\"\n \ncompileParser = (withCompiledParser) ->\n  fs.readFile \"src/logo.jison\", 'utf8', (err, jison) ->\n    Parser = require(\"jison\").Parser\n    js = new Parser(jison).generate()\n    withCompiledParser \"(function() {\\n#{js}\\n\\nthis.parser = parser;\\n}).call(this)\"\n \ncompileApp = (withCompiledScripts) ->\n  compiledCoffee = new Array\n  for file, index in SOURCES then do (file, index) ->\n    fs.readFile \"#{file}.coffee\", 'utf8', (err, coffee) ->\n      throw err if err\n      compiledCoffee.push CoffeeScript.compile(coffee)\n      withCompiledScripts(compiledCoffee) if compiledCoffee.length == SOURCES.length\n \nexecOut = (commandLine) ->\n  exec(commandLine, (err, stdout, stderr) ->\n    console.log(\"> #{commandLine}\")\n    console.log(stdout)\n    console.log(stderr)\n  )"],[1,"test', -> require('./test').run()\n\ntask 'bench', -> require('./benchmark').run()\n\ntask 'docs', ->\n  run 'docco src/coffeekup.coffee'\n\nrun = (args...) ->\n  for a in args\n    switch typeof a\n      when 'string' then command = a\n      when 'object'\n        if a instanceof Array then params = a\n        else options = a\n      when 'function' then callback = a\n  \n  command += ' ' + params.join ' ' if params?\n  cmd = spawn '/bin/sh', ['-c', command], options\n  cmd.stdout.on 'data', (data) -> process.stdout.write data\n  cmd.stderr.on 'data', (data) -> process.stderr.write data\n  process.on 'SIGHUP', -> cmd.kill()\n  cmd.on 'exit', (code) -> callback() if callback? and code is 0"]],"start1":110,"start2":110,"length1":1388,"length2":688}]],"length":798,"saved":false}
{"contributors":[],"silentsave":false,"ts":1364785569176,"patch":[[{"diffs":[[0,"c src/*."],[1,"*"],[0,"coffee'\n"]],"start1":98,"start2":98,"length1":16,"length2":17},{"diffs":[[0,"src/"],[-1,"coffeekup."],[1,"funnel.lit"],[0,"coff"]],"start1":233,"start2":233,"length1":18,"length2":18}]],"length":799,"saved":false}
{"ts":1364785812448,"patch":[[{"diffs":[[0,"n 'docco"],[1," --layout 'linear'"],[0," src/fun"]],"start1":224,"start2":224,"length1":16,"length2":34}]],"length":817,"saved":false}
{"ts":1364785821313,"patch":[[{"diffs":[[0,"out "],[1,"\\"],[0,"'linear"],[1,"\\"],[0,"' sr"]],"start1":238,"start2":238,"length1":15,"length2":17}]],"length":819,"saved":false}
